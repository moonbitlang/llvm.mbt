package "Kaida-Amethyst/llvm/unsafe"

// Values
fn llvm_add_alias2(LLVMModuleRef, LLVMTypeRef, UInt, LLVMValueRef, String) -> LLVMValueRef

fn llvm_add_attribute_at_index(LLVMValueRef, LLVMAttributeIndex, LLVMAttributeRef) -> Unit

fn llvm_add_call_site_attribute(LLVMValueRef, LLVMAttributeIndex, LLVMAttributeRef) -> Unit

fn llvm_add_case(LLVMValueRef, LLVMValueRef, LLVMBasicBlockRef) -> Unit

fn llvm_add_clause(LLVMValueRef, LLVMValueRef) -> Unit

fn llvm_add_destination(LLVMValueRef, LLVMBasicBlockRef) -> Unit

fn llvm_add_function(LLVMModuleRef, String, LLVMTypeRef) -> LLVMValueRef

fn llvm_add_global(LLVMModuleRef, LLVMTypeRef, String) -> LLVMValueRef

fn llvm_add_global_ifunc(LLVMModuleRef, String, LLVMTypeRef, UInt, LLVMValueRef) -> LLVMValueRef

fn llvm_add_global_in_address_space(LLVMModuleRef, LLVMTypeRef, String, UInt) -> LLVMValueRef

fn llvm_add_handler(LLVMValueRef, LLVMBasicBlockRef) -> Unit

fn llvm_add_incoming(LLVMValueRef, Array[LLVMValueRef], Array[LLVMBasicBlockRef]) -> Unit

fn llvm_add_metadata_to_inst(LLVMBuilderRef, LLVMValueRef) -> Unit

fn llvm_add_module_flag(LLVMModuleRef, LLVMModuleFlagBehavior, String, LLVMMetadataRef) -> Unit

fn llvm_add_named_metadata_operand(LLVMModuleRef, String, LLVMValueRef) -> Unit

fn llvm_add_target_dependent_function_attr(LLVMValueRef, String, String) -> Unit

fn llvm_alias_get_aliasee(LLVMValueRef) -> LLVMValueRef

fn llvm_alias_set_aliasee(LLVMValueRef, LLVMValueRef) -> Unit

fn llvm_align_of(LLVMTypeRef) -> LLVMValueRef

fn llvm_append_basic_block(LLVMValueRef, String) -> LLVMBasicBlockRef

fn llvm_append_basic_block_in_context(LLVMContextRef, LLVMValueRef, String) -> LLVMBasicBlockRef

fn llvm_append_existing_basic_block(LLVMValueRef, LLVMBasicBlockRef) -> Unit

fn llvm_append_module_inline_asm(LLVMModuleRef, CStr, UInt64) -> Unit

fn llvm_array_type(LLVMTypeRef, UInt) -> LLVMTypeRef

fn llvm_array_type2(LLVMTypeRef, UInt64) -> LLVMTypeRef

fn llvm_attr_is_null(LLVMAttributeRef) -> LLVMBool

fn llvm_basic_block_as_value(LLVMBasicBlockRef) -> LLVMValueRef

fn llvm_bb_is_null(LLVMBasicBlockRef) -> Bool

fn llvm_bfloat_type() -> LLVMTypeRef

fn llvm_bfloat_type_in_context(LLVMContextRef) -> LLVMTypeRef

fn llvm_block_address(LLVMValueRef, LLVMBasicBlockRef) -> LLVMValueRef

fn llvm_build_a_shr(LLVMBuilderRef, LLVMValueRef, LLVMValueRef, String) -> LLVMValueRef

fn llvm_build_add(LLVMBuilderRef, LLVMValueRef, LLVMValueRef, String) -> LLVMValueRef

fn llvm_build_addr_space_cast(LLVMBuilderRef, LLVMValueRef, LLVMTypeRef, String) -> LLVMValueRef

fn llvm_build_aggregate_ret(LLVMBuilderRef, Array[LLVMValueRef]) -> LLVMValueRef

fn llvm_build_alloca(LLVMBuilderRef, LLVMTypeRef, String) -> LLVMValueRef

fn llvm_build_and(LLVMBuilderRef, LLVMValueRef, LLVMValueRef, String) -> LLVMValueRef

fn llvm_build_array_alloca(LLVMBuilderRef, LLVMTypeRef, LLVMValueRef, String) -> LLVMValueRef

fn llvm_build_array_malloc(LLVMBuilderRef, LLVMTypeRef, LLVMValueRef, String) -> LLVMValueRef

fn llvm_build_atomic_cmp_xchg(LLVMBuilderRef, LLVMValueRef, LLVMValueRef, LLVMValueRef, LLVMAtomicOrdering, LLVMAtomicOrdering, LLVMBool) -> LLVMValueRef

fn llvm_build_atomic_rmw(LLVMBuilderRef, LLVMAtomicRMWBinOp, LLVMValueRef, LLVMValueRef, LLVMAtomicOrdering, LLVMBool) -> LLVMValueRef

fn llvm_build_bin_op(LLVMBuilderRef, LLVMOpcode, LLVMValueRef, LLVMValueRef, String) -> LLVMValueRef

fn llvm_build_bit_cast(LLVMBuilderRef, LLVMValueRef, LLVMTypeRef, String) -> LLVMValueRef

fn llvm_build_br(LLVMBuilderRef, LLVMBasicBlockRef) -> LLVMValueRef

fn llvm_build_call2(LLVMBuilderRef, LLVMTypeRef, LLVMValueRef, Array[LLVMValueRef], String) -> LLVMValueRef

fn llvm_build_call_br(LLVMBuilderRef, LLVMTypeRef, LLVMValueRef, LLVMBasicBlockRef, Array[LLVMBasicBlockRef], Array[LLVMValueRef], Array[LLVMOperandBundleRef], String) -> LLVMValueRef

fn llvm_build_call_with_operand_bundles(LLVMBuilderRef, LLVMTypeRef, LLVMValueRef, Array[LLVMValueRef], Array[LLVMOperandBundleRef], String) -> LLVMValueRef

fn llvm_build_cast(LLVMBuilderRef, LLVMOpcode, LLVMValueRef, LLVMTypeRef, String) -> LLVMValueRef

fn llvm_build_catch_pad(LLVMBuilderRef, LLVMValueRef, Array[LLVMValueRef], String) -> LLVMValueRef

fn llvm_build_catch_ret(LLVMBuilderRef, LLVMValueRef, LLVMBasicBlockRef) -> LLVMValueRef

fn llvm_build_catch_switch(LLVMBuilderRef, LLVMValueRef, LLVMBasicBlockRef, UInt, String) -> LLVMValueRef

fn llvm_build_cleanup_pad(LLVMBuilderRef, LLVMValueRef, Array[LLVMValueRef], String) -> LLVMValueRef

fn llvm_build_cleanup_ret(LLVMBuilderRef, LLVMValueRef, LLVMBasicBlockRef) -> LLVMValueRef

fn llvm_build_cond_br(LLVMBuilderRef, LLVMValueRef, LLVMBasicBlockRef, LLVMBasicBlockRef) -> LLVMValueRef

fn llvm_build_exact_s_div(LLVMBuilderRef, LLVMValueRef, LLVMValueRef, String) -> LLVMValueRef

fn llvm_build_exact_u_div(LLVMBuilderRef, LLVMValueRef, LLVMValueRef, String) -> LLVMValueRef

fn llvm_build_extract_element(LLVMBuilderRef, LLVMValueRef, LLVMValueRef, String) -> LLVMValueRef

fn llvm_build_extract_value(LLVMBuilderRef, LLVMValueRef, UInt, String) -> LLVMValueRef

fn llvm_build_f_add(LLVMBuilderRef, LLVMValueRef, LLVMValueRef, String) -> LLVMValueRef

fn llvm_build_f_div(LLVMBuilderRef, LLVMValueRef, LLVMValueRef, String) -> LLVMValueRef

fn llvm_build_f_mul(LLVMBuilderRef, LLVMValueRef, LLVMValueRef, String) -> LLVMValueRef

fn llvm_build_f_neg(LLVMBuilderRef, LLVMValueRef, String) -> LLVMValueRef

fn llvm_build_f_rem(LLVMBuilderRef, LLVMValueRef, LLVMValueRef, String) -> LLVMValueRef

fn llvm_build_f_sub(LLVMBuilderRef, LLVMValueRef, LLVMValueRef, String) -> LLVMValueRef

fn llvm_build_fcmp(LLVMBuilderRef, LLVMRealPredicate, LLVMValueRef, LLVMValueRef, String) -> LLVMValueRef

fn llvm_build_fence(LLVMBuilderRef, LLVMAtomicOrdering, Bool, String) -> LLVMValueRef

fn llvm_build_fp_cast(LLVMBuilderRef, LLVMValueRef, LLVMTypeRef, String) -> LLVMValueRef

fn llvm_build_fp_ext(LLVMBuilderRef, LLVMValueRef, LLVMTypeRef, String) -> LLVMValueRef

fn llvm_build_fp_to_si(LLVMBuilderRef, LLVMValueRef, LLVMTypeRef, String) -> LLVMValueRef

fn llvm_build_fp_to_ui(LLVMBuilderRef, LLVMValueRef, LLVMTypeRef, String) -> LLVMValueRef

fn llvm_build_fp_trunc(LLVMBuilderRef, LLVMValueRef, LLVMTypeRef, String) -> LLVMValueRef

fn llvm_build_free(LLVMBuilderRef, LLVMValueRef) -> LLVMValueRef

fn llvm_build_freeze(LLVMBuilderRef, LLVMValueRef, String) -> LLVMValueRef

fn llvm_build_gep2(LLVMBuilderRef, LLVMTypeRef, LLVMValueRef, Array[LLVMValueRef], String) -> LLVMValueRef

fn llvm_build_global_string(LLVMBuilderRef, String, String) -> LLVMValueRef

fn llvm_build_global_string_ptr(LLVMBuilderRef, String, String) -> LLVMValueRef

fn llvm_build_icmp(LLVMBuilderRef, LLVMIntPredicate, LLVMValueRef, LLVMValueRef, String) -> LLVMValueRef

fn llvm_build_in_bounds_gep2(LLVMBuilderRef, LLVMTypeRef, LLVMValueRef, Array[LLVMValueRef], String) -> LLVMValueRef

fn llvm_build_indirect_br(LLVMBuilderRef, LLVMValueRef, UInt) -> LLVMValueRef

fn llvm_build_insert_element(LLVMBuilderRef, LLVMValueRef, LLVMValueRef, LLVMValueRef, String) -> LLVMValueRef

fn llvm_build_insert_value(LLVMBuilderRef, LLVMValueRef, LLVMValueRef, UInt, String) -> LLVMValueRef

fn llvm_build_int_cast(LLVMBuilderRef, LLVMValueRef, LLVMTypeRef, String) -> LLVMValueRef

fn llvm_build_int_cast2(LLVMBuilderRef, LLVMValueRef, LLVMTypeRef, Bool, String) -> LLVMValueRef

fn llvm_build_int_to_ptr(LLVMBuilderRef, LLVMValueRef, LLVMTypeRef, String) -> LLVMValueRef

fn llvm_build_invoke2(LLVMBuilderRef, LLVMTypeRef, LLVMValueRef, Array[LLVMValueRef], LLVMBasicBlockRef, LLVMBasicBlockRef, String) -> LLVMValueRef

fn llvm_build_invoke_with_operand_bundles(LLVMBuilderRef, LLVMTypeRef, LLVMValueRef, Array[LLVMValueRef], LLVMBasicBlockRef, LLVMBasicBlockRef, Array[LLVMOperandBundleRef], String) -> LLVMValueRef

fn llvm_build_is_not_null(LLVMBuilderRef, LLVMValueRef, String) -> LLVMValueRef

fn llvm_build_is_null(LLVMBuilderRef, LLVMValueRef, String) -> LLVMValueRef

fn llvm_build_l_shr(LLVMBuilderRef, LLVMValueRef, LLVMValueRef, String) -> LLVMValueRef

fn llvm_build_landing_pad(LLVMBuilderRef, LLVMTypeRef, LLVMValueRef, UInt, String) -> LLVMValueRef

fn llvm_build_load2(LLVMBuilderRef, LLVMTypeRef, LLVMValueRef, String) -> LLVMValueRef

fn llvm_build_malloc(LLVMBuilderRef, LLVMTypeRef, String) -> LLVMValueRef

fn llvm_build_mem_cpy(LLVMBuilderRef, LLVMValueRef, UInt, LLVMValueRef, UInt, LLVMValueRef) -> LLVMValueRef

fn llvm_build_mem_move(LLVMBuilderRef, LLVMValueRef, UInt, LLVMValueRef, UInt, LLVMValueRef) -> LLVMValueRef

fn llvm_build_mem_set(LLVMBuilderRef, LLVMValueRef, LLVMValueRef, LLVMValueRef, UInt) -> LLVMValueRef

fn llvm_build_mul(LLVMBuilderRef, LLVMValueRef, LLVMValueRef, String) -> LLVMValueRef

fn llvm_build_neg(LLVMBuilderRef, LLVMValueRef, String) -> LLVMValueRef

fn llvm_build_not(LLVMBuilderRef, LLVMValueRef, String) -> LLVMValueRef

fn llvm_build_nsw_add(LLVMBuilderRef, LLVMValueRef, LLVMValueRef, String) -> LLVMValueRef

fn llvm_build_nsw_mul(LLVMBuilderRef, LLVMValueRef, LLVMValueRef, String) -> LLVMValueRef

fn llvm_build_nsw_neg(LLVMBuilderRef, LLVMValueRef, String) -> LLVMValueRef

fn llvm_build_nsw_sub(LLVMBuilderRef, LLVMValueRef, LLVMValueRef, String) -> LLVMValueRef

fn llvm_build_nuw_add(LLVMBuilderRef, LLVMValueRef, LLVMValueRef, String) -> LLVMValueRef

fn llvm_build_nuw_mul(LLVMBuilderRef, LLVMValueRef, LLVMValueRef, String) -> LLVMValueRef

fn llvm_build_nuw_neg(LLVMBuilderRef, LLVMValueRef, String) -> LLVMValueRef

fn llvm_build_nuw_sub(LLVMBuilderRef, LLVMValueRef, LLVMValueRef, String) -> LLVMValueRef

fn llvm_build_or(LLVMBuilderRef, LLVMValueRef, LLVMValueRef, String) -> LLVMValueRef

fn llvm_build_phi(LLVMBuilderRef, LLVMTypeRef, String) -> LLVMValueRef

fn llvm_build_pointer_cast(LLVMBuilderRef, LLVMValueRef, LLVMTypeRef, String) -> LLVMValueRef

fn llvm_build_ptr_diff2(LLVMBuilderRef, LLVMTypeRef, LLVMValueRef, LLVMValueRef, String) -> LLVMValueRef

fn llvm_build_ptr_to_int(LLVMBuilderRef, LLVMValueRef, LLVMTypeRef, String) -> LLVMValueRef

fn llvm_build_resume(LLVMBuilderRef, LLVMValueRef) -> LLVMValueRef

fn llvm_build_ret(LLVMBuilderRef, LLVMValueRef) -> LLVMValueRef

fn llvm_build_ret_void(LLVMBuilderRef) -> LLVMValueRef

fn llvm_build_s_div(LLVMBuilderRef, LLVMValueRef, LLVMValueRef, String) -> LLVMValueRef

fn llvm_build_s_ext(LLVMBuilderRef, LLVMValueRef, LLVMTypeRef, String) -> LLVMValueRef

fn llvm_build_s_ext_or_bit_cast(LLVMBuilderRef, LLVMValueRef, LLVMTypeRef, String) -> LLVMValueRef

fn llvm_build_s_rem(LLVMBuilderRef, LLVMValueRef, LLVMValueRef, String) -> LLVMValueRef

fn llvm_build_select(LLVMBuilderRef, LLVMValueRef, LLVMValueRef, LLVMValueRef, String) -> LLVMValueRef

fn llvm_build_shl(LLVMBuilderRef, LLVMValueRef, LLVMValueRef, String) -> LLVMValueRef

fn llvm_build_shuffle_vector(LLVMBuilderRef, LLVMValueRef, LLVMValueRef, LLVMValueRef, String) -> LLVMValueRef

fn llvm_build_si_to_fp(LLVMBuilderRef, LLVMValueRef, LLVMTypeRef, String) -> LLVMValueRef

fn llvm_build_store(LLVMBuilderRef, LLVMValueRef, LLVMValueRef) -> LLVMValueRef

fn llvm_build_struct_gep2(LLVMBuilderRef, LLVMTypeRef, LLVMValueRef, UInt, String) -> LLVMValueRef

fn llvm_build_sub(LLVMBuilderRef, LLVMValueRef, LLVMValueRef, String) -> LLVMValueRef

fn llvm_build_switch(LLVMBuilderRef, LLVMValueRef, LLVMBasicBlockRef, UInt) -> LLVMValueRef

fn llvm_build_trunc(LLVMBuilderRef, LLVMValueRef, LLVMTypeRef, String) -> LLVMValueRef

fn llvm_build_trunc_or_bit_cast(LLVMBuilderRef, LLVMValueRef, LLVMTypeRef, String) -> LLVMValueRef

fn llvm_build_u_div(LLVMBuilderRef, LLVMValueRef, LLVMValueRef, String) -> LLVMValueRef

fn llvm_build_u_rem(LLVMBuilderRef, LLVMValueRef, LLVMValueRef, String) -> LLVMValueRef

fn llvm_build_ui_to_fp(LLVMBuilderRef, LLVMValueRef, LLVMTypeRef, String) -> LLVMValueRef

fn llvm_build_unreachable(LLVMBuilderRef) -> LLVMValueRef

fn llvm_build_va_arg(LLVMBuilderRef, LLVMValueRef, LLVMTypeRef, String) -> LLVMValueRef

fn llvm_build_xor(LLVMBuilderRef, LLVMValueRef, LLVMValueRef, String) -> LLVMValueRef

fn llvm_build_z_ext(LLVMBuilderRef, LLVMValueRef, LLVMTypeRef, String) -> LLVMValueRef

fn llvm_build_z_ext_or_bit_cast(LLVMBuilderRef, LLVMValueRef, LLVMTypeRef, String) -> LLVMValueRef

fn llvm_builder_get_default_fp_math_tag(LLVMBuilderRef) -> LLVMMetadataRef

fn llvm_builder_set_default_fp_math_tag(LLVMBuilderRef, LLVMMetadataRef) -> Unit

fn llvm_can_value_use_fast_math_flags(LLVMValueRef) -> Bool

fn llvm_clear_insertion_position(LLVMBuilderRef) -> Unit

fn llvm_clone_module(LLVMModuleRef) -> LLVMModuleRef

fn llvm_comdat_is_null(LLVMComdatRef) -> LLVMBool

fn llvm_const_add(LLVMValueRef, LLVMValueRef) -> LLVMValueRef

fn llvm_const_addr_space_cast(LLVMValueRef, LLVMTypeRef) -> LLVMValueRef

fn llvm_const_all_ones(LLVMTypeRef) -> LLVMValueRef

fn llvm_const_array(LLVMTypeRef, Array[LLVMValueRef]) -> LLVMValueRef

fn llvm_const_array2(LLVMTypeRef, Array[LLVMValueRef]) -> LLVMValueRef

fn llvm_const_bit_cast(LLVMValueRef, LLVMTypeRef) -> LLVMValueRef

fn llvm_const_extract_element(LLVMValueRef, LLVMValueRef) -> LLVMValueRef

fn llvm_const_gep2(LLVMTypeRef, LLVMValueRef, Array[LLVMValueRef]) -> LLVMValueRef

fn llvm_const_in_bounds_gep2(LLVMTypeRef, LLVMValueRef, Array[LLVMValueRef]) -> LLVMValueRef

fn llvm_const_inline_asm(LLVMTypeRef, String, String, Bool, Bool) -> LLVMValueRef

fn llvm_const_insert_element(LLVMValueRef, LLVMValueRef, LLVMValueRef) -> LLVMValueRef

fn llvm_const_int(LLVMTypeRef, UInt64, Bool) -> LLVMValueRef

fn llvm_const_int_get_s_ext_value(LLVMValueRef) -> Int64

fn llvm_const_int_get_z_ext_value(LLVMValueRef) -> UInt64

fn llvm_const_int_of_arbitrary_precision(LLVMTypeRef, Array[UInt64]) -> LLVMValueRef

fn llvm_const_int_of_string(LLVMTypeRef, String, Int) -> LLVMValueRef

fn llvm_const_int_of_string_and_size(LLVMTypeRef, String, Int) -> LLVMValueRef

fn llvm_const_int_to_ptr(LLVMValueRef, LLVMTypeRef) -> LLVMValueRef

fn llvm_const_mul(LLVMValueRef, LLVMValueRef) -> LLVMValueRef

fn llvm_const_named_struct(LLVMTypeRef, Array[LLVMValueRef]) -> LLVMValueRef

fn llvm_const_neg(LLVMValueRef) -> LLVMValueRef

fn llvm_const_not(LLVMValueRef) -> LLVMValueRef

fn llvm_const_nsw_add(LLVMValueRef, LLVMValueRef) -> LLVMValueRef

fn llvm_const_nsw_mul(LLVMValueRef, LLVMValueRef) -> LLVMValueRef

fn llvm_const_nsw_neg(LLVMValueRef) -> LLVMValueRef

fn llvm_const_nsw_sub(LLVMValueRef, LLVMValueRef) -> LLVMValueRef

fn llvm_const_null(LLVMTypeRef) -> LLVMValueRef

fn llvm_const_nuw_add(LLVMValueRef, LLVMValueRef) -> LLVMValueRef

fn llvm_const_nuw_mul(LLVMValueRef, LLVMValueRef) -> LLVMValueRef

fn llvm_const_nuw_sub(LLVMValueRef, LLVMValueRef) -> LLVMValueRef

fn llvm_const_pointer_cast(LLVMValueRef, LLVMTypeRef) -> LLVMValueRef

fn llvm_const_pointer_null(LLVMTypeRef) -> LLVMValueRef

fn llvm_const_ptr_to_int(LLVMValueRef, LLVMTypeRef) -> LLVMValueRef

fn llvm_const_real(LLVMTypeRef, Double) -> LLVMValueRef

fn llvm_const_real_get_double(LLVMValueRef) -> (Double, Bool)

fn llvm_const_real_of_string(LLVMTypeRef, String) -> LLVMValueRef

fn llvm_const_real_of_string_and_size(LLVMTypeRef, String) -> LLVMValueRef

fn llvm_const_shuffle_vector(LLVMValueRef, LLVMValueRef, LLVMValueRef) -> LLVMValueRef

fn llvm_const_string(CStr, UInt, LLVMBool) -> LLVMValueRef

fn llvm_const_string_in_context(LLVMContextRef, String, Bool) -> LLVMValueRef

fn llvm_const_string_in_context2(LLVMContextRef, String, Bool) -> LLVMValueRef

fn llvm_const_struct(Array[LLVMValueRef], Bool) -> LLVMValueRef

fn llvm_const_struct_in_context(LLVMContextRef, Array[LLVMValueRef], Bool) -> LLVMValueRef

fn llvm_const_sub(LLVMValueRef, LLVMValueRef) -> LLVMValueRef

fn llvm_const_trunc(LLVMValueRef, LLVMTypeRef) -> LLVMValueRef

fn llvm_const_trunc_or_bit_cast(LLVMValueRef, LLVMTypeRef) -> LLVMValueRef

fn llvm_const_vector(Array[LLVMValueRef]) -> LLVMValueRef

fn llvm_const_xor(LLVMValueRef, LLVMValueRef) -> LLVMValueRef

fn llvm_consume_error(LLVMErrorRef) -> Unit

fn llvm_context_create() -> LLVMContextRef

fn llvm_context_dispose(LLVMContextRef) -> Unit

fn llvm_context_set_discard_value_names(LLVMContextRef, Bool) -> Unit

fn llvm_context_should_discard_value_names(LLVMContextRef) -> LLVMBool

fn llvm_count_basic_blocks(LLVMValueRef) -> UInt

fn llvm_count_incoming(LLVMValueRef) -> UInt

fn llvm_count_param_types(LLVMTypeRef) -> UInt

fn llvm_count_params(LLVMValueRef) -> UInt

fn llvm_count_struct_element_types(LLVMTypeRef) -> UInt

fn llvm_create_basic_block_in_context(LLVMContextRef, String) -> LLVMBasicBlockRef

fn llvm_create_builder() -> LLVMBuilderRef

fn llvm_create_builder_in_context(LLVMContextRef) -> LLVMBuilderRef

fn llvm_create_di_builder(LLVMModuleRef) -> LLVMDIBuilderRef

fn llvm_create_di_builder_disallow_unresolved(LLVMModuleRef) -> LLVMDIBuilderRef

fn llvm_create_enum_attribute(LLVMContextRef, UInt, UInt64) -> LLVMAttributeRef

fn llvm_create_function_pass_manager_for_module(LLVMModuleRef) -> LLVMPassManagerRef

fn llvm_create_memory_buffer_with_memory_range(String, Int, String, Bool) -> LLVMMemoryBufferRef

fn llvm_create_memory_buffer_with_memory_range_copy(String, Int, String) -> LLVMMemoryBufferRef

fn llvm_create_message(CStr) -> CStr

fn llvm_create_module_provider_for_existing_module(LLVMModuleRef) -> LLVMModuleProviderRef

fn llvm_create_operand_bundle(String, Array[LLVMValueRef]) -> LLVMOperandBundleRef

fn llvm_create_pass_builder_options() -> LLVMPassBuilderOptionsRef

fn llvm_create_pass_manager() -> LLVMPassManagerRef

fn llvm_create_string_attribute(LLVMContextRef, String, String) -> LLVMAttributeRef

fn llvm_create_string_error(CStr) -> LLVMErrorRef

fn llvm_create_target_machine(LLVMTargetRef, String, String, String, LLVMCodeGenOptLevel, LLVMRelocMode, LLVMCodeModel) -> LLVMTargetMachineRef

fn llvm_create_target_machine_options() -> LLVMTargetMachineOptionsRef

fn llvm_create_target_machine_with_options(LLVMTargetRef, String, LLVMTargetMachineOptionsRef) -> LLVMTargetMachineRef

fn llvm_create_type_attribute(LLVMContextRef, UInt, LLVMTypeRef) -> LLVMAttributeRef

fn llvm_debug_metadata_version() -> UInt

fn llvm_delete_basic_block(LLVMBasicBlockRef) -> Unit

fn llvm_delete_function(LLVMValueRef) -> Unit

fn llvm_delete_global(LLVMValueRef) -> Unit

fn llvm_delete_instruction(LLVMValueRef) -> Unit

fn llvm_di_builder_create_artificial_type(LLVMDIBuilderRef, LLVMMetadataRef) -> LLVMMetadataRef

fn llvm_di_builder_create_constant_value_expression(LLVMDIBuilderRef, UInt64) -> LLVMMetadataRef

fn llvm_di_builder_create_null_ptr_type(LLVMDIBuilderRef) -> LLVMMetadataRef

fn llvm_di_builder_create_qualified_type(LLVMDIBuilderRef, UInt, LLVMMetadataRef) -> LLVMMetadataRef

fn llvm_di_builder_create_reference_type(LLVMDIBuilderRef, UInt, LLVMMetadataRef) -> LLVMMetadataRef

fn llvm_di_builder_create_unspecified_type(LLVMDIBuilderRef, String) -> LLVMMetadataRef

fn llvm_di_builder_finalize(LLVMDIBuilderRef) -> Unit

fn llvm_di_builder_finalize_subprogram(LLVMDIBuilderRef, LLVMMetadataRef) -> Unit

fn llvm_di_builder_get_or_create_subrange(LLVMDIBuilderRef, Int64, Int64) -> LLVMMetadataRef

fn llvm_di_builder_insert_dbg_value_record_at_end(LLVMDIBuilderRef, LLVMValueRef, LLVMMetadataRef, LLVMMetadataRef, LLVMMetadataRef, LLVMBasicBlockRef) -> LLVMDbgRecordRef

fn llvm_di_builder_insert_dbg_value_record_before(LLVMDIBuilderRef, LLVMValueRef, LLVMMetadataRef, LLVMMetadataRef, LLVMMetadataRef, LLVMValueRef) -> LLVMDbgRecordRef

fn llvm_di_builder_insert_declare_record_at_end(LLVMDIBuilderRef, LLVMValueRef, LLVMMetadataRef, LLVMMetadataRef, LLVMMetadataRef, LLVMBasicBlockRef) -> LLVMDbgRecordRef

fn llvm_di_builder_insert_declare_record_before(LLVMDIBuilderRef, LLVMValueRef, LLVMMetadataRef, LLVMMetadataRef, LLVMMetadataRef, LLVMValueRef) -> LLVMDbgRecordRef

fn llvm_di_builder_insert_label_at_end(LLVMDIBuilderRef, LLVMMetadataRef, LLVMMetadataRef, LLVMBasicBlockRef) -> LLVMDbgRecordRef

fn llvm_di_builder_insert_label_before(LLVMDIBuilderRef, LLVMMetadataRef, LLVMMetadataRef, LLVMValueRef) -> LLVMDbgRecordRef

fn llvm_di_file_get_directory(LLVMMetadataRef) -> String

fn llvm_di_file_get_filename(LLVMMetadataRef) -> String

fn llvm_di_file_get_source(LLVMMetadataRef) -> String

fn llvm_di_global_variable_expression_get_expression(LLVMMetadataRef) -> LLVMMetadataRef

fn llvm_di_global_variable_expression_get_variable(LLVMMetadataRef) -> LLVMMetadataRef

fn llvm_di_location_get_column(LLVMMetadataRef) -> UInt

fn llvm_di_location_get_inlined_at(LLVMMetadataRef) -> LLVMMetadataRef

fn llvm_di_location_get_line(LLVMMetadataRef) -> UInt

fn llvm_di_location_get_scope(LLVMMetadataRef) -> LLVMMetadataRef

fn llvm_di_scope_get_file(LLVMMetadataRef) -> LLVMMetadataRef

fn llvm_di_subprogram_get_line(LLVMMetadataRef) -> UInt

fn llvm_di_type_get_align_in_bits(LLVMMetadataRef) -> UInt

fn llvm_di_type_get_flags(LLVMMetadataRef) -> LLVMDIFlags

fn llvm_di_type_get_line(LLVMMetadataRef) -> UInt

fn llvm_di_type_get_name(LLVMMetadataRef) -> String

fn llvm_di_type_get_offset_in_bits(LLVMMetadataRef) -> UInt64

fn llvm_di_type_get_size_in_bits(LLVMMetadataRef) -> UInt64

fn llvm_di_variable_get_file(LLVMMetadataRef) -> LLVMMetadataRef

fn llvm_di_variable_get_line(LLVMMetadataRef) -> UInt

fn llvm_di_variable_get_scope(LLVMMetadataRef) -> LLVMMetadataRef

fn llvm_dispose_builder(LLVMBuilderRef) -> Unit

fn llvm_dispose_di_builder(LLVMDIBuilderRef) -> Unit

fn llvm_dispose_error_message(CStr) -> Unit

fn llvm_dispose_memory_buffer(LLVMMemoryBufferRef) -> Unit

fn llvm_dispose_message(CStr) -> Unit

fn llvm_dispose_module(LLVMModuleRef) -> Unit

fn llvm_dispose_module_provider(LLVMModuleProviderRef) -> Unit

fn llvm_dispose_operand_bundle(LLVMOperandBundleRef) -> Unit

fn llvm_dispose_pass_builder_options(LLVMPassBuilderOptionsRef) -> Unit

fn llvm_dispose_pass_manager(LLVMPassManagerRef) -> Unit

fn llvm_dispose_target_machine_options(LLVMTargetMachineOptionsRef) -> Unit

fn llvm_dispose_temporary_md_node(LLVMMetadataRef) -> Unit

fn llvm_double_type() -> LLVMTypeRef

fn llvm_double_type_in_context(LLVMContextRef) -> LLVMTypeRef

fn llvm_dump_module(LLVMModuleRef) -> Unit

fn llvm_dump_type(LLVMTypeRef) -> Unit

fn llvm_dump_value(LLVMValueRef) -> Unit

fn llvm_erase_global_ifunc(LLVMValueRef) -> Unit

fn llvm_finalize_function_pass_manager(LLVMPassManagerRef) -> LLVMBool

fn llvm_float_type() -> LLVMTypeRef

fn llvm_float_type_in_context(LLVMContextRef) -> LLVMTypeRef

fn llvm_fp128_type() -> LLVMTypeRef

fn llvm_fp128_type_in_context(LLVMContextRef) -> LLVMTypeRef

fn llvm_function_type(LLVMTypeRef, Array[LLVMTypeRef], Bool) -> LLVMTypeRef

fn llvm_get_aggregate_element(LLVMValueRef, UInt) -> LLVMValueRef

fn llvm_get_alignment(LLVMValueRef) -> UInt

fn llvm_get_allocated_type(LLVMValueRef) -> LLVMTypeRef

fn llvm_get_arg_operand(LLVMValueRef, UInt) -> LLVMValueRef

fn llvm_get_array_length(LLVMTypeRef) -> UInt

fn llvm_get_array_length2(LLVMTypeRef) -> UInt64

fn llvm_get_as_string(LLVMValueRef) -> String

fn llvm_get_atomic_rmw_bin_op(LLVMValueRef) -> LLVMAtomicRMWBinOp

fn llvm_get_attribute_count_at_index(LLVMValueRef, LLVMAttributeIndex) -> UInt

fn llvm_get_attributes_at_index(LLVMValueRef, LLVMAttributeIndex) -> Array[LLVMAttributeRef]

fn llvm_get_basic_block_name(LLVMBasicBlockRef) -> String

fn llvm_get_basic_block_parent(LLVMBasicBlockRef) -> LLVMValueRef

fn llvm_get_basic_block_terminator(LLVMBasicBlockRef) -> LLVMValueRef

fn llvm_get_basic_blocks(LLVMValueRef) -> Array[LLVMBasicBlockRef]

fn llvm_get_bitcode_module(LLVMMemoryBufferRef) -> (LLVMModuleRef, String, LLVMBool)

fn llvm_get_bitcode_module2(LLVMMemoryBufferRef) -> (LLVMModuleRef, String, LLVMBool)

fn llvm_get_bitcode_module_in_context(LLVMContextRef, LLVMMemoryBufferRef) -> (LLVMModuleRef, String, LLVMBool)

fn llvm_get_bitcode_module_in_context2(LLVMContextRef, LLVMMemoryBufferRef) -> (LLVMModuleRef, LLVMBool)

fn llvm_get_block_address_basic_block(LLVMValueRef) -> LLVMBasicBlockRef

fn llvm_get_block_address_function(LLVMValueRef) -> LLVMValueRef

fn llvm_get_buffer_size(LLVMMemoryBufferRef) -> Int

fn llvm_get_buffer_start(LLVMMemoryBufferRef) -> String

fn llvm_get_call_br_default_dest(LLVMValueRef) -> LLVMBasicBlockRef

fn llvm_get_call_br_indirect_dest(LLVMValueRef, UInt) -> LLVMBasicBlockRef

fn llvm_get_call_br_num_indirect_dests(LLVMValueRef) -> UInt

fn llvm_get_call_site_attribute_count(LLVMValueRef, LLVMAttributeIndex) -> UInt

fn llvm_get_call_site_enum_attribute(LLVMValueRef, LLVMAttributeIndex, UInt) -> LLVMAttributeRef

fn llvm_get_call_site_string_attribute(LLVMValueRef, LLVMAttributeIndex, String) -> LLVMAttributeRef

fn llvm_get_called_function_type(LLVMValueRef) -> LLVMTypeRef

fn llvm_get_called_value(LLVMValueRef) -> LLVMValueRef

fn llvm_get_cast_opcode(LLVMValueRef, Bool, LLVMTypeRef, Bool) -> LLVMOpcode

fn llvm_get_clause(LLVMValueRef, UInt) -> LLVMValueRef

fn llvm_get_cmp_xchg_failure_ordering(LLVMValueRef) -> LLVMAtomicOrdering

fn llvm_get_cmp_xchg_success_ordering(LLVMValueRef) -> LLVMAtomicOrdering

fn llvm_get_comdat(LLVMValueRef) -> LLVMComdatRef

fn llvm_get_comdat_selection_kind(LLVMComdatRef) -> LLVMComdatSelectionKind

fn llvm_get_condition(LLVMValueRef) -> LLVMValueRef

fn llvm_get_const_opcode(LLVMValueRef) -> LLVMOpcode

fn llvm_get_current_debug_location(LLVMBuilderRef) -> LLVMValueRef

fn llvm_get_current_debug_location2(LLVMBuilderRef) -> LLVMMetadataRef

fn llvm_get_data_layout(LLVMModuleRef) -> String

fn llvm_get_data_layout_str(LLVMModuleRef) -> String

fn llvm_get_debug_loc_column(LLVMValueRef) -> UInt

fn llvm_get_debug_loc_directory(LLVMValueRef) -> String

fn llvm_get_debug_loc_filename(LLVMValueRef) -> String

fn llvm_get_debug_loc_line(LLVMValueRef) -> UInt

fn llvm_get_di_node_tag(LLVMMetadataRef) -> UInt16

fn llvm_get_diag_info_description(LLVMDiagnosticInfoRef) -> String

fn llvm_get_dll_storage_class(LLVMValueRef) -> LLVMDLLStorageClass

fn llvm_get_element_type(LLVMTypeRef) -> LLVMTypeRef

fn llvm_get_entry_basic_block(LLVMValueRef) -> LLVMBasicBlockRef

fn llvm_get_enum_attribute_at_index(LLVMValueRef, LLVMAttributeIndex, UInt) -> LLVMAttributeRef

fn llvm_get_enum_attribute_kind(LLVMAttributeRef) -> UInt

fn llvm_get_enum_attribute_kind_for_name(String) -> UInt

fn llvm_get_enum_attribute_value(LLVMAttributeRef) -> UInt64

fn llvm_get_error_message(LLVMErrorRef) -> CStr

fn llvm_get_exact(LLVMValueRef) -> Bool

fn llvm_get_fast_math_flags(LLVMValueRef) -> LLVMFastMathFlags

fn llvm_get_fcmp_predicate(LLVMValueRef) -> LLVMRealPredicate

fn llvm_get_first_basic_block(LLVMValueRef) -> LLVMBasicBlockRef

fn llvm_get_first_dbg_record(LLVMValueRef) -> LLVMDbgRecordRef

fn llvm_get_first_function(LLVMModuleRef) -> LLVMValueRef

fn llvm_get_first_global(LLVMModuleRef) -> LLVMValueRef

fn llvm_get_first_global_alias(LLVMModuleRef) -> LLVMValueRef

fn llvm_get_first_global_ifunc(LLVMModuleRef) -> LLVMValueRef

fn llvm_get_first_instruction(LLVMBasicBlockRef) -> LLVMValueRef

fn llvm_get_first_named_metadata(LLVMModuleRef) -> LLVMNamedMDNodeRef

fn llvm_get_first_param(LLVMValueRef) -> LLVMValueRef

fn llvm_get_first_target() -> LLVMTargetRef

fn llvm_get_first_use(LLVMValueRef) -> LLVMUseRef

fn llvm_get_function_call_conv(LLVMValueRef) -> UInt

fn llvm_get_gc(LLVMValueRef) -> String

fn llvm_get_gep_source_element_type(LLVMValueRef) -> LLVMTypeRef

fn llvm_get_global_context() -> LLVMContextRef

fn llvm_get_global_ifunc_resolver(LLVMValueRef) -> LLVMValueRef

fn llvm_get_global_parent(LLVMValueRef) -> LLVMModuleRef

fn llvm_get_handlers(LLVMValueRef) -> Array[LLVMBasicBlockRef]

fn llvm_get_icmp_predicate(LLVMValueRef) -> LLVMIntPredicate

fn llvm_get_incoming_block(LLVMValueRef, UInt) -> LLVMBasicBlockRef

fn llvm_get_incoming_value(LLVMValueRef, UInt) -> LLVMValueRef

fn llvm_get_indices(LLVMValueRef) -> Array[UInt]

fn llvm_get_initializer(LLVMValueRef) -> LLVMValueRef

fn llvm_get_inline_asm(LLVMTypeRef, CStr, UInt64, CStr, UInt64, LLVMBool, LLVMBool, LLVMInlineAsmDialect, LLVMBool) -> LLVMValueRef

fn llvm_get_inline_asm_can_unwind(LLVMValueRef) -> Bool

fn llvm_get_inline_asm_constraint_string(LLVMValueRef) -> String

fn llvm_get_inline_asm_dialect(LLVMValueRef) -> LLVMInlineAsmDialect

fn llvm_get_inline_asm_function_type(LLVMValueRef) -> LLVMTypeRef

fn llvm_get_inline_asm_has_side_effects(LLVMValueRef) -> Bool

fn llvm_get_inline_asm_needs_aligned_stack(LLVMValueRef) -> Bool

fn llvm_get_inline_asm_string(LLVMValueRef) -> String

fn llvm_get_insert_block(LLVMBuilderRef) -> LLVMBasicBlockRef

fn llvm_get_instruction_call_conv(LLVMValueRef) -> UInt

fn llvm_get_instruction_opcode(LLVMValueRef) -> LLVMOpcode

fn llvm_get_instruction_parent(LLVMValueRef) -> LLVMBasicBlockRef

fn llvm_get_int_type_width(LLVMTypeRef) -> UInt

fn llvm_get_intrinsic_declaration(LLVMModuleRef, UInt, Array[LLVMTypeRef]) -> LLVMValueRef

fn llvm_get_intrinsic_id(LLVMValueRef) -> UInt

fn llvm_get_last_basic_block(LLVMValueRef) -> LLVMBasicBlockRef

fn llvm_get_last_dbg_record(LLVMValueRef) -> LLVMDbgRecordRef

fn llvm_get_last_enum_attribute_kind() -> UInt

fn llvm_get_last_function(LLVMModuleRef) -> LLVMValueRef

fn llvm_get_last_global(LLVMModuleRef) -> LLVMValueRef

fn llvm_get_last_global_alias(LLVMModuleRef) -> LLVMValueRef

fn llvm_get_last_global_ifunc(LLVMModuleRef) -> LLVMValueRef

fn llvm_get_last_instruction(LLVMBasicBlockRef) -> LLVMValueRef

fn llvm_get_last_named_metadata(LLVMModuleRef) -> LLVMNamedMDNodeRef

fn llvm_get_last_param(LLVMValueRef) -> LLVMValueRef

fn llvm_get_linkage(LLVMValueRef) -> LLVMLinkage

fn llvm_get_mask_value(LLVMValueRef, UInt) -> Int

fn llvm_get_md_kind_id(String) -> UInt

fn llvm_get_md_kind_id_in_context(LLVMContextRef, String) -> UInt

fn llvm_get_md_node_num_operands(LLVMValueRef) -> UInt

fn llvm_get_md_node_operands(LLVMValueRef) -> Array[LLVMValueRef]

fn llvm_get_md_string(LLVMValueRef) -> String

fn llvm_get_metadata(LLVMValueRef, UInt) -> LLVMValueRef

fn llvm_get_metadata_kind(LLVMMetadataRef) -> LLVMMetadataKind

fn llvm_get_module_context(LLVMModuleRef) -> LLVMContextRef

fn llvm_get_module_debug_metadata_version(LLVMModuleRef) -> UInt

fn llvm_get_module_flag(LLVMModuleRef, CStr, UInt64) -> LLVMMetadataRef

fn llvm_get_module_identifier(LLVMModuleRef) -> String

fn llvm_get_module_inline_asm(LLVMModuleRef) -> String

fn llvm_get_n_neg(LLVMValueRef) -> Bool

fn llvm_get_named_function(LLVMModuleRef, String) -> LLVMValueRef

fn llvm_get_named_global(LLVMModuleRef, String) -> LLVMValueRef

fn llvm_get_named_global_alias(LLVMModuleRef, String) -> LLVMValueRef

fn llvm_get_named_global_ifunc(LLVMModuleRef, String) -> LLVMValueRef

fn llvm_get_named_metadata(LLVMModuleRef, CStr, UInt64) -> LLVMNamedMDNodeRef

fn llvm_get_named_metadata_name(LLVMNamedMDNodeRef) -> String

fn llvm_get_named_metadata_num_operands(LLVMModuleRef, String) -> UInt

fn llvm_get_named_metadata_operands(LLVMModuleRef, String) -> Array[LLVMValueRef]

fn llvm_get_next_basic_block(LLVMBasicBlockRef) -> LLVMBasicBlockRef

fn llvm_get_next_dbg_record(LLVMDbgRecordRef) -> LLVMDbgRecordRef

fn llvm_get_next_function(LLVMValueRef) -> LLVMValueRef

fn llvm_get_next_global(LLVMValueRef) -> LLVMValueRef

fn llvm_get_next_global_alias(LLVMValueRef) -> LLVMValueRef

fn llvm_get_next_global_ifunc(LLVMValueRef) -> LLVMValueRef

fn llvm_get_next_instruction(LLVMValueRef) -> LLVMValueRef

fn llvm_get_next_named_metadata(LLVMNamedMDNodeRef) -> LLVMNamedMDNodeRef

fn llvm_get_next_param(LLVMValueRef) -> LLVMValueRef

fn llvm_get_next_target(LLVMTargetRef) -> LLVMTargetRef

fn llvm_get_next_use(LLVMUseRef) -> LLVMUseRef

fn llvm_get_normal_dest(LLVMValueRef) -> LLVMBasicBlockRef

fn llvm_get_nsw(LLVMValueRef) -> Bool

fn llvm_get_num_arg_operands(LLVMValueRef) -> UInt

fn llvm_get_num_clauses(LLVMValueRef) -> UInt

fn llvm_get_num_contained_types(LLVMTypeRef) -> UInt

fn llvm_get_num_handlers(LLVMValueRef) -> UInt

fn llvm_get_num_indices(LLVMValueRef) -> UInt

fn llvm_get_num_mask_elements(LLVMValueRef) -> UInt

fn llvm_get_num_operand_bundle_args(LLVMOperandBundleRef) -> UInt

fn llvm_get_num_operand_bundles(LLVMValueRef) -> UInt

fn llvm_get_num_operands(LLVMValueRef) -> Int

fn llvm_get_num_successors(LLVMValueRef) -> UInt

fn llvm_get_nuw(LLVMValueRef) -> Bool

fn llvm_get_operand(LLVMValueRef, UInt) -> LLVMValueRef

fn llvm_get_operand_bundle_arg_at_index(LLVMOperandBundleRef, UInt) -> LLVMValueRef

fn llvm_get_operand_bundle_at_index(LLVMValueRef, UInt) -> LLVMOperandBundleRef

fn llvm_get_operand_bundle_tag(LLVMOperandBundleRef) -> String

fn llvm_get_operand_use(LLVMValueRef, UInt) -> LLVMUseRef

fn llvm_get_or_insert_comdat(LLVMModuleRef, String) -> LLVMComdatRef

fn llvm_get_or_insert_named_metadata(LLVMModuleRef, CStr, UInt64) -> LLVMNamedMDNodeRef

fn llvm_get_ordering(LLVMValueRef) -> LLVMAtomicOrdering

fn llvm_get_param(LLVMValueRef, UInt) -> LLVMValueRef

fn llvm_get_param_parent(LLVMValueRef) -> LLVMValueRef

fn llvm_get_param_types(LLVMTypeRef) -> Array[LLVMTypeRef]

fn llvm_get_params(LLVMValueRef) -> Array[LLVMValueRef]

fn llvm_get_parent_catch_switch(LLVMValueRef) -> LLVMValueRef

fn llvm_get_personality_fn(LLVMValueRef) -> LLVMValueRef

fn llvm_get_pointer_address_space(LLVMTypeRef) -> UInt

fn llvm_get_poison(LLVMTypeRef) -> LLVMValueRef

fn llvm_get_prefix_data(LLVMValueRef) -> LLVMValueRef

fn llvm_get_previous_basic_block(LLVMBasicBlockRef) -> LLVMBasicBlockRef

fn llvm_get_previous_dbg_record(LLVMDbgRecordRef) -> LLVMDbgRecordRef

fn llvm_get_previous_function(LLVMValueRef) -> LLVMValueRef

fn llvm_get_previous_global(LLVMValueRef) -> LLVMValueRef

fn llvm_get_previous_global_alias(LLVMValueRef) -> LLVMValueRef

fn llvm_get_previous_global_ifunc(LLVMValueRef) -> LLVMValueRef

fn llvm_get_previous_instruction(LLVMValueRef) -> LLVMValueRef

fn llvm_get_previous_named_metadata(LLVMNamedMDNodeRef) -> LLVMNamedMDNodeRef

fn llvm_get_previous_param(LLVMValueRef) -> LLVMValueRef

fn llvm_get_prologue_data(LLVMValueRef) -> LLVMValueRef

fn llvm_get_return_type(LLVMTypeRef) -> LLVMTypeRef

fn llvm_get_section(LLVMValueRef) -> String

fn llvm_get_source_file_name(LLVMModuleRef) -> String

fn llvm_get_string_attribute_at_index(LLVMValueRef, LLVMAttributeIndex, String) -> LLVMAttributeRef

fn llvm_get_string_attribute_kind(LLVMAttributeRef) -> String

fn llvm_get_string_attribute_value(LLVMAttributeRef) -> String

fn llvm_get_struct_element_types(LLVMTypeRef) -> Array[LLVMTypeRef]

fn llvm_get_struct_name(LLVMTypeRef) -> String

fn llvm_get_subprogram(LLVMValueRef) -> LLVMMetadataRef

fn llvm_get_subtypes(LLVMTypeRef) -> Array[LLVMTypeRef]

fn llvm_get_successor(LLVMValueRef, UInt) -> LLVMBasicBlockRef

fn llvm_get_switch_default_dest(LLVMValueRef) -> LLVMBasicBlockRef

fn llvm_get_tail_call_kind(LLVMValueRef) -> LLVMTailCallKind

fn llvm_get_target(LLVMModuleRef) -> String

fn llvm_get_target_description(LLVMTargetRef) -> String

fn llvm_get_target_ext_type_int_param(LLVMTypeRef, UInt) -> UInt

fn llvm_get_target_ext_type_name(LLVMTypeRef) -> String

fn llvm_get_target_ext_type_num_int_params(LLVMTypeRef) -> UInt

fn llvm_get_target_ext_type_num_type_params(LLVMTypeRef) -> UInt

fn llvm_get_target_ext_type_type_param(LLVMTypeRef, UInt) -> LLVMTypeRef

fn llvm_get_target_from_name(String) -> LLVMTargetRef

fn llvm_get_target_from_triple(String) -> (LLVMTargetRef, String, Bool)

fn llvm_get_target_name(LLVMTargetRef) -> String

fn llvm_get_thread_local_mode(LLVMValueRef) -> LLVMThreadLocalMode

fn llvm_get_type_attribute_value(LLVMAttributeRef) -> LLVMTypeRef

fn llvm_get_type_by_name(LLVMContextRef, String) -> LLVMTypeRef

fn llvm_get_type_by_name_in_module(LLVMModuleRef, String) -> LLVMTypeRef

fn llvm_get_type_context(LLVMTypeRef) -> LLVMContextRef

fn llvm_get_type_kind(LLVMTypeRef) -> LLVMTypeKind

fn llvm_get_undef(LLVMTypeRef) -> LLVMValueRef

fn llvm_get_undef_mask_elem() -> Int

fn llvm_get_unnamed_address(LLVMValueRef) -> LLVMUnnamedAddr

fn llvm_get_unwind_dest(LLVMValueRef) -> LLVMBasicBlockRef

fn llvm_get_used_value(LLVMUseRef) -> LLVMValueRef

fn llvm_get_user(LLVMUseRef) -> LLVMValueRef

fn llvm_get_value_kind(LLVMValueRef) -> LLVMValueKind

fn llvm_get_value_name(LLVMValueRef) -> String

fn llvm_get_vector_size(LLVMTypeRef) -> UInt

fn llvm_get_version() -> (UInt, UInt, UInt)

fn llvm_get_visibility(LLVMValueRef) -> LLVMVisibility

fn llvm_get_volatile(LLVMValueRef) -> Bool

fn llvm_get_weak(LLVMValueRef) -> Bool

fn llvm_global_clear_metadata(LLVMValueRef) -> Unit

fn llvm_global_erase_metadata(LLVMValueRef, UInt) -> Unit

fn llvm_global_get_value_type(LLVMValueRef) -> LLVMTypeRef

fn llvm_global_set_metadata(LLVMValueRef, UInt, LLVMMetadataRef) -> Unit

fn llvm_half_type() -> LLVMTypeRef

fn llvm_half_type_in_context(LLVMContextRef) -> LLVMTypeRef

fn llvm_has_metadata(LLVMValueRef) -> Bool

fn llvm_has_personality_fn(LLVMValueRef) -> Bool

fn llvm_has_prefix_data(LLVMValueRef) -> Bool

fn llvm_has_prologue_data(LLVMValueRef) -> Bool

fn llvm_has_unnamed_addr(LLVMValueRef) -> Bool

fn llvm_initialize_analysis(LLVMPassRegistryRef) -> Unit

fn llvm_initialize_codegen(LLVMPassRegistryRef) -> Unit

fn llvm_initialize_core(LLVMPassRegistryRef) -> Unit

fn llvm_initialize_function_pass_manager(LLVMPassManagerRef) -> LLVMBool

fn llvm_initialize_inst_combine(LLVMPassRegistryRef) -> Unit

fn llvm_initialize_ipa(LLVMPassRegistryRef) -> Unit

fn llvm_initialize_ipo(LLVMPassRegistryRef) -> Unit

fn llvm_initialize_scalar_opts(LLVMPassRegistryRef) -> Unit

fn llvm_initialize_target(LLVMPassRegistryRef) -> Unit

fn llvm_initialize_transform_utils(LLVMPassRegistryRef) -> Unit

fn llvm_initialize_vectorization(LLVMPassRegistryRef) -> Unit

fn llvm_insert_basic_block(LLVMBasicBlockRef, String) -> LLVMBasicBlockRef

fn llvm_insert_basic_block_in_context(LLVMContextRef, LLVMBasicBlockRef, String) -> LLVMBasicBlockRef

fn llvm_insert_existing_basic_block_after_insert_block(LLVMBuilderRef, LLVMBasicBlockRef) -> Unit

fn llvm_insert_into_builder(LLVMBuilderRef, LLVMValueRef) -> Unit

fn llvm_insert_into_builder_with_name(LLVMBuilderRef, LLVMValueRef, String) -> Unit

fn llvm_instruction_clone(LLVMValueRef) -> LLVMValueRef

fn llvm_instruction_erase_from_parent(LLVMValueRef) -> Unit

fn llvm_instruction_get_debug_loc(LLVMValueRef) -> LLVMMetadataRef

fn llvm_instruction_remove_from_parent(LLVMValueRef) -> Unit

fn llvm_instruction_set_debug_loc(LLVMValueRef, LLVMMetadataRef) -> Unit

fn llvm_int128_type() -> LLVMTypeRef

fn llvm_int128_type_in_context(LLVMContextRef) -> LLVMTypeRef

fn llvm_int16_type() -> LLVMTypeRef

fn llvm_int16_type_in_context(LLVMContextRef) -> LLVMTypeRef

fn llvm_int1_type() -> LLVMTypeRef

fn llvm_int1_type_in_context(LLVMContextRef) -> LLVMTypeRef

fn llvm_int32_type() -> LLVMTypeRef

fn llvm_int32_type_in_context(LLVMContextRef) -> LLVMTypeRef

fn llvm_int64_type() -> LLVMTypeRef

fn llvm_int64_type_in_context(LLVMContextRef) -> LLVMTypeRef

fn llvm_int8_type() -> LLVMTypeRef

fn llvm_int8_type_in_context(LLVMContextRef) -> LLVMTypeRef

fn llvm_int_type(UInt) -> LLVMTypeRef

fn llvm_int_type_in_context(LLVMContextRef, UInt) -> LLVMTypeRef

fn llvm_intrinsic_copy_overloaded_name(UInt, Array[LLVMTypeRef]) -> String

fn llvm_intrinsic_copy_overloaded_name2(LLVMModuleRef, UInt, Array[LLVMTypeRef]) -> String

fn llvm_intrinsic_get_name(UInt) -> String

fn llvm_intrinsic_get_type(LLVMContextRef, UInt, Array[LLVMTypeRef]) -> LLVMTypeRef

fn llvm_intrinsic_is_overloaded(UInt) -> Bool

fn llvm_is_atomic(LLVMValueRef) -> Bool

fn llvm_is_atomic_single_thread(LLVMValueRef) -> LLVMBool

fn llvm_is_cleanup(LLVMValueRef) -> Bool

fn llvm_is_conditional(LLVMValueRef) -> Bool

fn llvm_is_constant(LLVMValueRef) -> Bool

fn llvm_is_constant_string(LLVMValueRef) -> Bool

fn llvm_is_declaration(LLVMValueRef) -> Bool

fn llvm_is_enum_attribute(LLVMAttributeRef) -> Bool

fn llvm_is_externally_initialized(LLVMValueRef) -> Bool

fn llvm_is_function_var_arg(LLVMTypeRef) -> Bool

fn llvm_is_global_constant(LLVMValueRef) -> Bool

fn llvm_is_in_bounds(LLVMValueRef) -> Bool

fn llvm_is_literal_struct(LLVMTypeRef) -> Bool

fn llvm_is_multithreaded() -> Bool

fn llvm_is_new_dbg_info_format(LLVMModuleRef) -> Bool

fn llvm_is_null(LLVMValueRef) -> LLVMBool

fn llvm_is_opaque_struct(LLVMTypeRef) -> Bool

fn llvm_is_packed_struct(LLVMTypeRef) -> Bool

fn llvm_is_poison(LLVMValueRef) -> Bool

fn llvm_is_string_attribute(LLVMAttributeRef) -> Bool

fn llvm_is_tail_call(LLVMValueRef) -> Bool

fn llvm_is_thread_local(LLVMValueRef) -> Bool

fn llvm_is_type_attribute(LLVMAttributeRef) -> Bool

fn llvm_is_undef(LLVMValueRef) -> Bool

fn llvm_isa_addr_space_cast_inst(LLVMValueRef) -> LLVMValueRef

fn llvm_isa_alloca_inst(LLVMValueRef) -> LLVMValueRef

fn llvm_isa_argument(LLVMValueRef) -> LLVMValueRef

fn llvm_isa_atomic_cmp_xchg_inst(LLVMValueRef) -> LLVMValueRef

fn llvm_isa_atomic_rmw_inst(LLVMValueRef) -> LLVMValueRef

fn llvm_isa_basic_block(LLVMValueRef) -> LLVMValueRef

fn llvm_isa_binary_operator(LLVMValueRef) -> LLVMValueRef

fn llvm_isa_bit_cast_inst(LLVMValueRef) -> LLVMValueRef

fn llvm_isa_block_address(LLVMValueRef) -> LLVMValueRef

fn llvm_isa_branch_inst(LLVMValueRef) -> LLVMValueRef

fn llvm_isa_call_br_inst(LLVMValueRef) -> LLVMValueRef

fn llvm_isa_call_inst(LLVMValueRef) -> LLVMValueRef

fn llvm_isa_cast_inst(LLVMValueRef) -> LLVMValueRef

fn llvm_isa_catch_pad_inst(LLVMValueRef) -> LLVMValueRef

fn llvm_isa_catch_return_inst(LLVMValueRef) -> LLVMValueRef

fn llvm_isa_catch_switch_inst(LLVMValueRef) -> LLVMValueRef

fn llvm_isa_cleanup_pad_inst(LLVMValueRef) -> LLVMValueRef

fn llvm_isa_cleanup_return_inst(LLVMValueRef) -> LLVMValueRef

fn llvm_isa_cmp_inst(LLVMValueRef) -> LLVMValueRef

fn llvm_isa_constant(LLVMValueRef) -> LLVMValueRef

fn llvm_isa_constant_aggregate_zero(LLVMValueRef) -> LLVMValueRef

fn llvm_isa_constant_array(LLVMValueRef) -> LLVMValueRef

fn llvm_isa_constant_data_array(LLVMValueRef) -> LLVMValueRef

fn llvm_isa_constant_data_sequential(LLVMValueRef) -> LLVMValueRef

fn llvm_isa_constant_data_vector(LLVMValueRef) -> LLVMValueRef

fn llvm_isa_constant_expr(LLVMValueRef) -> LLVMValueRef

fn llvm_isa_constant_fp(LLVMValueRef) -> LLVMValueRef

fn llvm_isa_constant_int(LLVMValueRef) -> LLVMValueRef

fn llvm_isa_constant_pointer_null(LLVMValueRef) -> LLVMValueRef

fn llvm_isa_constant_struct(LLVMValueRef) -> LLVMValueRef

fn llvm_isa_constant_token_none(LLVMValueRef) -> LLVMValueRef

fn llvm_isa_constant_vector(LLVMValueRef) -> LLVMValueRef

fn llvm_isa_dbg_declare_inst(LLVMValueRef) -> LLVMValueRef

fn llvm_isa_dbg_info_intrinsic(LLVMValueRef) -> LLVMValueRef

fn llvm_isa_dbg_label_inst(LLVMValueRef) -> LLVMValueRef

fn llvm_isa_dbg_variable_intrinsic(LLVMValueRef) -> LLVMValueRef

fn llvm_isa_extract_element_inst(LLVMValueRef) -> LLVMValueRef

fn llvm_isa_extract_value_inst(LLVMValueRef) -> LLVMValueRef

fn llvm_isa_f_cmp_inst(LLVMValueRef) -> LLVMValueRef

fn llvm_isa_fence_inst(LLVMValueRef) -> LLVMValueRef

fn llvm_isa_fp_ext_inst(LLVMValueRef) -> LLVMValueRef

fn llvm_isa_fp_to_si_inst(LLVMValueRef) -> LLVMValueRef

fn llvm_isa_fp_to_ui_inst(LLVMValueRef) -> LLVMValueRef

fn llvm_isa_fp_trunc_inst(LLVMValueRef) -> LLVMValueRef

fn llvm_isa_freeze_inst(LLVMValueRef) -> LLVMValueRef

fn llvm_isa_funclet_pad_inst(LLVMValueRef) -> LLVMValueRef

fn llvm_isa_function(LLVMValueRef) -> LLVMValueRef

fn llvm_isa_get_element_ptr_inst(LLVMValueRef) -> LLVMValueRef

fn llvm_isa_global_alias(LLVMValueRef) -> LLVMValueRef

fn llvm_isa_global_ifunc(LLVMValueRef) -> LLVMValueRef

fn llvm_isa_global_object(LLVMValueRef) -> LLVMValueRef

fn llvm_isa_global_value(LLVMValueRef) -> LLVMValueRef

fn llvm_isa_global_variable(LLVMValueRef) -> LLVMValueRef

fn llvm_isa_i_cmp_inst(LLVMValueRef) -> LLVMValueRef

fn llvm_isa_indirect_br_inst(LLVMValueRef) -> LLVMValueRef

fn llvm_isa_inline_asm(LLVMValueRef) -> LLVMValueRef

fn llvm_isa_insert_element_inst(LLVMValueRef) -> LLVMValueRef

fn llvm_isa_insert_value_inst(LLVMValueRef) -> LLVMValueRef

fn llvm_isa_instruction(LLVMValueRef) -> LLVMValueRef

fn llvm_isa_int_to_ptr_inst(LLVMValueRef) -> LLVMValueRef

fn llvm_isa_intrinsic_inst(LLVMValueRef) -> LLVMValueRef

fn llvm_isa_invoke_inst(LLVMValueRef) -> LLVMValueRef

fn llvm_isa_landing_pad_inst(LLVMValueRef) -> LLVMValueRef

fn llvm_isa_load_inst(LLVMValueRef) -> LLVMValueRef

fn llvm_isa_md_node(LLVMValueRef) -> LLVMValueRef

fn llvm_isa_md_string(LLVMValueRef) -> LLVMValueRef

fn llvm_isa_mem_cpy_inst(LLVMValueRef) -> LLVMValueRef

fn llvm_isa_mem_intrinsic(LLVMValueRef) -> LLVMValueRef

fn llvm_isa_mem_move_inst(LLVMValueRef) -> LLVMValueRef

fn llvm_isa_mem_set_inst(LLVMValueRef) -> LLVMValueRef

fn llvm_isa_phi_node(LLVMValueRef) -> LLVMValueRef

fn llvm_isa_poison_value(LLVMValueRef) -> LLVMValueRef

fn llvm_isa_ptr_to_int_inst(LLVMValueRef) -> LLVMValueRef

fn llvm_isa_resume_inst(LLVMValueRef) -> LLVMValueRef

fn llvm_isa_return_inst(LLVMValueRef) -> LLVMValueRef

fn llvm_isa_select_inst(LLVMValueRef) -> LLVMValueRef

fn llvm_isa_sext_inst(LLVMValueRef) -> LLVMValueRef

fn llvm_isa_shuffle_vector_inst(LLVMValueRef) -> LLVMValueRef

fn llvm_isa_si_to_fp_inst(LLVMValueRef) -> LLVMValueRef

fn llvm_isa_store_inst(LLVMValueRef) -> LLVMValueRef

fn llvm_isa_switch_inst(LLVMValueRef) -> LLVMValueRef

fn llvm_isa_terminator_inst(LLVMValueRef) -> LLVMValueRef

fn llvm_isa_trunc_inst(LLVMValueRef) -> LLVMValueRef

fn llvm_isa_ui_to_fp_inst(LLVMValueRef) -> LLVMValueRef

fn llvm_isa_unary_instruction(LLVMValueRef) -> LLVMValueRef

fn llvm_isa_unary_operator(LLVMValueRef) -> LLVMValueRef

fn llvm_isa_undef_value(LLVMValueRef) -> LLVMValueRef

fn llvm_isa_unreachable_inst(LLVMValueRef) -> LLVMValueRef

fn llvm_isa_user(LLVMValueRef) -> LLVMValueRef

fn llvm_isa_va_arg_inst(LLVMValueRef) -> LLVMValueRef

fn llvm_isa_value_as_metadata(LLVMValueRef) -> LLVMValueRef

fn llvm_isa_z_ext_inst(LLVMValueRef) -> LLVMValueRef

fn llvm_label_type() -> LLVMTypeRef

fn llvm_label_type_in_context(LLVMContextRef) -> LLVMTypeRef

fn llvm_link_modules(LLVMModuleRef, LLVMModuleRef) -> Bool

fn llvm_lookup_intrinsic_id(String) -> UInt

fn llvm_md_node(Array[LLVMValueRef]) -> LLVMValueRef

fn llvm_md_node_in_context(LLVMContextRef, Array[LLVMValueRef]) -> LLVMValueRef

fn llvm_md_node_in_context2(LLVMContextRef, Array[LLVMMetadataRef]) -> LLVMMetadataRef

fn llvm_md_string(String) -> LLVMValueRef

fn llvm_md_string_in_context(LLVMContextRef, String) -> LLVMValueRef

fn llvm_md_string_in_context2(LLVMContextRef, String) -> LLVMMetadataRef

fn llvm_metadata_as_value(LLVMContextRef, LLVMMetadataRef) -> LLVMValueRef

fn llvm_metadata_replace_all_uses_with(LLVMMetadataRef, LLVMMetadataRef) -> Unit

fn llvm_metadata_type_in_context(LLVMContextRef) -> LLVMTypeRef

fn llvm_module_create_with_name(String) -> LLVMModuleRef

fn llvm_module_create_with_name_in_context(String, LLVMContextRef) -> LLVMModuleRef

fn llvm_move_basic_block_after(LLVMBasicBlockRef, LLVMBasicBlockRef) -> Unit

fn llvm_move_basic_block_before(LLVMBasicBlockRef, LLVMBasicBlockRef) -> Unit

fn llvm_parse_bitcode(LLVMMemoryBufferRef) -> (LLVMModuleRef, String, LLVMBool)

fn llvm_parse_bitcode2(LLVMMemoryBufferRef) -> (LLVMModuleRef, LLVMBool)

fn llvm_parse_bitcode_in_context(LLVMContextRef, LLVMMemoryBufferRef) -> (LLVMModuleRef, String, LLVMBool)

fn llvm_parse_bitcode_in_context2(LLVMContextRef, LLVMMemoryBufferRef) -> (LLVMModuleRef, LLVMBool)

fn llvm_parse_ir_in_context(LLVMContextRef, LLVMMemoryBufferRef) -> (LLVMModuleRef, String, LLVMBool)

fn llvm_pass_builder_options_set_call_graph_profile(LLVMPassBuilderOptionsRef, Bool) -> Unit

fn llvm_pass_builder_options_set_debug_logging(LLVMPassBuilderOptionsRef, Bool) -> Unit

fn llvm_pass_builder_options_set_forget_all_scev_in_loop_unroll(LLVMPassBuilderOptionsRef, Bool) -> Unit

fn llvm_pass_builder_options_set_inliner_threshold(LLVMPassBuilderOptionsRef, Int) -> Unit

fn llvm_pass_builder_options_set_licm_mssa_no_acc_for_promotion_cap(LLVMPassBuilderOptionsRef, UInt) -> Unit

fn llvm_pass_builder_options_set_licm_mssa_opt_cap(LLVMPassBuilderOptionsRef, UInt) -> Unit

fn llvm_pass_builder_options_set_loop_interleaving(LLVMPassBuilderOptionsRef, Bool) -> Unit

fn llvm_pass_builder_options_set_loop_unrolling(LLVMPassBuilderOptionsRef, Bool) -> Unit

fn llvm_pass_builder_options_set_loop_vectorization(LLVMPassBuilderOptionsRef, Bool) -> Unit

fn llvm_pass_builder_options_set_merge_functions(LLVMPassBuilderOptionsRef, Bool) -> Unit

fn llvm_pass_builder_options_set_slp_vectorization(LLVMPassBuilderOptionsRef, Bool) -> Unit

fn llvm_pass_builder_options_set_verify_each(LLVMPassBuilderOptionsRef, Bool) -> Unit

fn llvm_pointer_type(LLVMTypeRef, UInt) -> LLVMTypeRef

fn llvm_pointer_type_in_context(LLVMContextRef, UInt) -> LLVMTypeRef

fn llvm_pointer_type_is_opaque(LLVMTypeRef) -> Bool

fn llvm_position_builder(LLVMBuilderRef, LLVMBasicBlockRef, LLVMValueRef) -> Unit

fn llvm_position_builder_at_end(LLVMBuilderRef, LLVMBasicBlockRef) -> Unit

fn llvm_position_builder_before(LLVMBuilderRef, LLVMValueRef) -> Unit

fn llvm_position_builder_before_dbg_records(LLVMBuilderRef, LLVMBasicBlockRef, LLVMValueRef) -> Unit

fn llvm_position_builder_before_instr_and_dbg_records(LLVMBuilderRef, LLVMValueRef) -> Unit

fn llvm_ppc_fp128_type() -> LLVMTypeRef

fn llvm_ppc_fp128_type_in_context(LLVMContextRef) -> LLVMTypeRef

fn llvm_print_dbg_record_to_string(LLVMDbgRecordRef) -> String

fn llvm_print_module_to_string(LLVMModuleRef) -> String

fn llvm_print_type_to_string(LLVMTypeRef) -> String

fn llvm_print_value_to_string(LLVMValueRef) -> String

fn llvm_remark_string_get_data(LLVMRemarkStringRef) -> String

fn llvm_remark_string_get_len(LLVMRemarkStringRef) -> UInt

fn llvm_remove_basic_block_from_parent(LLVMBasicBlockRef) -> Unit

fn llvm_remove_call_site_enum_attribute(LLVMValueRef, LLVMAttributeIndex, UInt) -> Unit

fn llvm_remove_call_site_string_attribute(LLVMValueRef, LLVMAttributeIndex, String) -> Unit

fn llvm_remove_enum_attribute_at_index(LLVMValueRef, LLVMAttributeIndex, UInt) -> Unit

fn llvm_remove_global_ifunc(LLVMValueRef) -> Unit

fn llvm_remove_string_attribute_at_index(LLVMValueRef, LLVMAttributeIndex, String) -> Unit

fn llvm_replace_all_uses_with(LLVMValueRef, LLVMValueRef) -> Unit

fn llvm_replace_md_node_operand_with(LLVMValueRef, UInt, LLVMMetadataRef) -> Unit

fn llvm_run_function_pass_manager(LLVMPassManagerRef, LLVMValueRef) -> LLVMBool

fn llvm_run_pass_manager(LLVMPassManagerRef, LLVMModuleRef) -> LLVMBool

fn llvm_run_passes(LLVMModuleRef, String, LLVMTargetMachineRef, LLVMPassBuilderOptionsRef) -> LLVMErrorRef

fn llvm_scalable_vector_type(LLVMTypeRef, UInt) -> LLVMTypeRef

fn llvm_set_alignment(LLVMValueRef, UInt) -> Unit

fn llvm_set_arg_operand(LLVMValueRef, UInt, LLVMValueRef) -> Unit

fn llvm_set_atomic_rmw_bin_op(LLVMValueRef, LLVMAtomicRMWBinOp) -> Unit

fn llvm_set_atomic_single_thread(LLVMValueRef, Bool) -> Unit

fn llvm_set_cleanup(LLVMValueRef, Bool) -> Unit

fn llvm_set_cmp_xchg_failure_ordering(LLVMValueRef, LLVMAtomicOrdering) -> Unit

fn llvm_set_cmp_xchg_success_ordering(LLVMValueRef, LLVMAtomicOrdering) -> Unit

fn llvm_set_comdat(LLVMValueRef, LLVMComdatRef) -> Unit

fn llvm_set_comdat_selection_kind(LLVMComdatRef, LLVMComdatSelectionKind) -> Unit

fn llvm_set_condition(LLVMValueRef, LLVMValueRef) -> Unit

fn llvm_set_current_debug_location2(LLVMBuilderRef, LLVMMetadataRef) -> Unit

fn llvm_set_data_layout(LLVMModuleRef, String) -> Unit

fn llvm_set_exact(LLVMValueRef, Bool) -> Unit

fn llvm_set_externally_initialized(LLVMValueRef, Bool) -> Unit

fn llvm_set_fast_math_flags(LLVMValueRef, LLVMFastMathFlags) -> Unit

fn llvm_set_function_call_conv(LLVMValueRef, UInt) -> Unit

fn llvm_set_gc(LLVMValueRef, String) -> Unit

fn llvm_set_global_constant(LLVMValueRef, Bool) -> Unit

fn llvm_set_global_ifunc_resolver(LLVMValueRef, LLVMValueRef) -> Unit

fn llvm_set_initializer(LLVMValueRef, LLVMValueRef) -> Unit

fn llvm_set_inst_debug_location(LLVMBuilderRef, LLVMValueRef) -> Unit

fn llvm_set_instr_param_alignment(LLVMValueRef, LLVMAttributeIndex, UInt) -> Unit

fn llvm_set_instruction_call_conv(LLVMValueRef, UInt) -> Unit

fn llvm_set_is_disjoint(LLVMValueRef, Bool) -> Unit

fn llvm_set_is_in_bounds(LLVMValueRef, LLVMBool) -> Unit

fn llvm_set_is_new_dbg_info_format(LLVMModuleRef, Bool) -> Unit

fn llvm_set_linkage(LLVMValueRef, LLVMLinkage) -> Unit

fn llvm_set_metadata(LLVMValueRef, UInt, LLVMValueRef) -> Unit

fn llvm_set_module_identifier(LLVMModuleRef, String) -> Unit

fn llvm_set_module_inline_asm(LLVMModuleRef, String) -> Unit

fn llvm_set_module_inline_asm2(LLVMModuleRef, String) -> Unit

fn llvm_set_n_neg(LLVMValueRef, Bool) -> Unit

fn llvm_set_normal_dest(LLVMValueRef, LLVMBasicBlockRef) -> Unit

fn llvm_set_nsw(LLVMValueRef, Bool) -> Unit

fn llvm_set_nuw(LLVMValueRef, Bool) -> Unit

fn llvm_set_operand(LLVMValueRef, UInt, LLVMValueRef) -> Unit

fn llvm_set_ordering(LLVMValueRef, LLVMAtomicOrdering) -> Unit

fn llvm_set_param_alignment(LLVMValueRef, UInt) -> Unit

fn llvm_set_parent_catch_switch(LLVMValueRef, LLVMValueRef) -> Unit

fn llvm_set_personality_fn(LLVMValueRef, LLVMValueRef) -> Unit

fn llvm_set_prefix_data(LLVMValueRef, LLVMValueRef) -> Unit

fn llvm_set_prologue_data(LLVMValueRef, LLVMValueRef) -> Unit

fn llvm_set_section(LLVMValueRef, String) -> Unit

fn llvm_set_source_file_name(LLVMModuleRef, String) -> Unit

fn llvm_set_subprogram(LLVMValueRef, LLVMMetadataRef) -> Unit

fn llvm_set_successor(LLVMValueRef, UInt, LLVMBasicBlockRef) -> Unit

fn llvm_set_tail_call(LLVMValueRef, Bool) -> Unit

fn llvm_set_tail_call_kind(LLVMValueRef, LLVMTailCallKind) -> Unit

fn llvm_set_target(LLVMModuleRef, String) -> Unit

fn llvm_set_thread_local(LLVMValueRef, Bool) -> Unit

fn llvm_set_thread_local_mode(LLVMValueRef, LLVMThreadLocalMode) -> Unit

fn llvm_set_unnamed_addr(LLVMValueRef, Bool) -> Unit

fn llvm_set_unnamed_address(LLVMValueRef, LLVMUnnamedAddr) -> Unit

fn llvm_set_unwind_dest(LLVMValueRef, LLVMBasicBlockRef) -> Unit

fn llvm_set_value_name(LLVMValueRef, String) -> Unit

fn llvm_set_visibility(LLVMValueRef, LLVMVisibility) -> Unit

fn llvm_set_volatile(LLVMValueRef, Bool) -> Unit

fn llvm_set_weak(LLVMValueRef, Bool) -> Unit

fn llvm_shutdown() -> Unit

fn llvm_size_of(LLVMTypeRef) -> LLVMValueRef

fn llvm_start_multithreaded() -> Bool

fn llvm_stop_multithreaded() -> Unit

fn llvm_strip_module_debug_info(LLVMModuleRef) -> LLVMBool

fn llvm_struct_create_named(LLVMContextRef, String) -> LLVMTypeRef

fn llvm_struct_get_type_at_index(LLVMTypeRef, UInt) -> LLVMTypeRef

fn llvm_struct_set_body(LLVMTypeRef, Array[LLVMTypeRef], Bool) -> Unit

fn llvm_struct_type(Array[LLVMTypeRef], Bool) -> LLVMTypeRef

fn llvm_struct_type_in_context(LLVMContextRef, Array[LLVMTypeRef], Bool) -> LLVMTypeRef

fn llvm_target_has_asm_backend(LLVMTargetRef) -> Bool

fn llvm_target_has_jit(LLVMTargetRef) -> LLVMBool

fn llvm_target_has_target_machine(LLVMTargetRef) -> Bool

fn llvm_target_machine_options_set_abi(LLVMTargetMachineOptionsRef, String) -> Unit

fn llvm_target_machine_options_set_code_model(LLVMTargetMachineOptionsRef, LLVMCodeModel) -> Unit

fn llvm_target_machine_options_set_codegen_opt_level(LLVMTargetMachineOptionsRef, LLVMCodeGenOptLevel) -> Unit

fn llvm_target_machine_options_set_cpu(LLVMTargetMachineOptionsRef, String) -> Unit

fn llvm_target_machine_options_set_features(LLVMTargetMachineOptionsRef, String) -> Unit

fn llvm_target_machine_options_set_reloc_mode(LLVMTargetMachineOptionsRef, LLVMRelocMode) -> Unit

fn llvm_token_type_in_context(LLVMContextRef) -> LLVMTypeRef

fn llvm_type_is_null(LLVMTypeRef) -> LLVMBool

fn llvm_type_is_sized(LLVMTypeRef) -> Bool

fn llvm_type_of(LLVMValueRef) -> LLVMTypeRef

fn llvm_use_is_null(LLVMUseRef) -> LLVMBool

fn llvm_value_as_basic_block(LLVMValueRef) -> LLVMBasicBlockRef

fn llvm_value_as_metadata(LLVMValueRef) -> LLVMMetadataRef

fn llvm_value_is_basic_block(LLVMValueRef) -> Bool

fn llvm_value_is_null(LLVMValueRef) -> LLVMBool

fn llvm_value_ref_is_null(LLVMValueRef) -> Bool

fn llvm_vector_type(LLVMTypeRef, UInt) -> LLVMTypeRef

fn llvm_verify_function(LLVMValueRef, LLVMVerifierFailureAction) -> LLVMBool

fn llvm_verify_module(LLVMModuleRef, LLVMVerifierFailureAction) -> (LLVMBool, String)

fn llvm_view_function_cfg(LLVMValueRef) -> Unit

fn llvm_view_function_cfg_only(LLVMValueRef) -> Unit

fn llvm_void_type() -> LLVMTypeRef

fn llvm_void_type_in_context(LLVMContextRef) -> LLVMTypeRef

fn llvm_write_bitcode_to_fd(LLVMModuleRef, Int, Int, Int) -> Int

fn llvm_write_bitcode_to_file(LLVMModuleRef, String) -> Int

fn llvm_write_bitcode_to_file_handle(LLVMModuleRef, Int) -> Int

fn llvm_write_bitcode_to_memory_buffer(LLVMModuleRef) -> LLVMMemoryBufferRef

fn llvm_x86_amx_type() -> LLVMTypeRef

fn llvm_x86_amx_type_in_context(LLVMContextRef) -> LLVMTypeRef

fn llvm_x86_fp80_type() -> LLVMTypeRef

fn llvm_x86_fp80_type_in_context(LLVMContextRef) -> LLVMTypeRef

fn llvm_x86_mmx_type() -> LLVMTypeRef

fn llvm_x86_mmx_type_in_context(LLVMContextRef) -> LLVMTypeRef

// Types and methods
type CStr
fn CStr::free(Self) -> Unit
fn CStr::new() -> Self

pub(all) enum LLVMAtomicOrdering {
  LLVMAtomicOrderingNotAtomic
  LLVMAtomicOrderingUnordered
  LLVMAtomicOrderingMonotonic
  LLVMAtomicOrderingAcquire
  LLVMAtomicOrderingRelease
  LLVMAtomicOrderingAcquireRelease
  LLVMAtomicOrderingSequentiallyConsistent
}
fn LLVMAtomicOrdering::from_int(Int) -> Self
fn LLVMAtomicOrdering::to_int(Self) -> Int

pub(all) enum LLVMAtomicRMWBinOp {
  LLVMAtomicRMWBinOpXchg
  LLVMAtomicRMWBinOpAdd
  LLVMAtomicRMWBinOpSub
  LLVMAtomicRMWBinOpAnd
  LLVMAtomicRMWBinOpNand
  LLVMAtomicRMWBinOpOr
  LLVMAtomicRMWBinOpXor
  LLVMAtomicRMWBinOpMax
  LLVMAtomicRMWBinOpMin
  LLVMAtomicRMWBinOpUMax
  LLVMAtomicRMWBinOpUMin
  LLVMAtomicRMWBinOpFAdd
  LLVMAtomicRMWBinOpFSub
  LLVMAtomicRMWBinOpFMax
  LLVMAtomicRMWBinOpFMin
  LLVMAtomicRMWBinOpUIncWrap
  LLVMAtomicRMWBinOpUDecWrap
}
fn LLVMAtomicRMWBinOp::from_int(Int) -> Self
fn LLVMAtomicRMWBinOp::to_int(Self) -> Int

pub(all) type LLVMAttributeIndex UInt
fn LLVMAttributeIndex::inner(Self) -> UInt
fn LLVMAttributeIndex::new(UInt) -> Self
impl Eq for LLVMAttributeIndex

#external
pub type LLVMAttributeRef
fn LLVMAttributeRef::get_enum_attribute_kind(Self) -> UInt
fn LLVMAttributeRef::get_enum_attribute_value(Self) -> UInt64
fn LLVMAttributeRef::get_type_attribute_value(Self) -> LLVMTypeRef
fn LLVMAttributeRef::is_enum_attribute(Self) -> Bool
fn LLVMAttributeRef::is_not_null(Self) -> Bool
fn LLVMAttributeRef::is_null(Self) -> Bool
fn LLVMAttributeRef::is_string_attribute(Self) -> Bool
fn LLVMAttributeRef::is_type_attribute(Self) -> Bool
impl Eq for LLVMAttributeRef

#external
pub type LLVMBasicBlockRef
fn LLVMBasicBlockRef::as_value_ref(Self) -> LLVMValueRef
fn LLVMBasicBlockRef::delete(Self) -> Unit
fn LLVMBasicBlockRef::get_first_instruction(Self) -> LLVMValueRef
fn LLVMBasicBlockRef::get_last_instruction(Self) -> LLVMValueRef
fn LLVMBasicBlockRef::get_name(Self) -> String
fn LLVMBasicBlockRef::get_next_basic_block(Self) -> Self
fn LLVMBasicBlockRef::get_parent(Self) -> LLVMValueRef
fn LLVMBasicBlockRef::get_previous_basic_block(Self) -> Self
fn LLVMBasicBlockRef::get_terminator(Self) -> LLVMValueRef
fn LLVMBasicBlockRef::is_not_null(Self) -> Bool
fn LLVMBasicBlockRef::is_null(Self) -> Bool
fn LLVMBasicBlockRef::move_after(Self, Self) -> Unit
fn LLVMBasicBlockRef::move_before(Self, Self) -> Unit
fn LLVMBasicBlockRef::remove_from_parent(Self) -> Unit
impl Eq for LLVMBasicBlockRef

#external
pub type LLVMBinaryRef

pub(all) enum LLVMBinaryType {
  LLVMBinaryTypeArchive
  LLVMBinaryTypeMachOUniversalBinary
  LLVMBinaryTypeCOFFImportFile
  LLVMBinaryTypeIR
  LLVMBinaryTypeWinRes
  LLVMBinaryTypeCOFF
  LLVMBinaryTypeELF32L
  LLVMBinaryTypeELF32B
  LLVMBinaryTypeELF64L
  LLVMBinaryTypeELF64B
  LLVMBinaryTypeMachO32L
  LLVMBinaryTypeMachO32B
  LLVMBinaryTypeMachO64L
  LLVMBinaryTypeMachO64B
  LLVMBinaryTypeWasm
  LLVMBinaryTypeOffload
}
fn LLVMBinaryType::from_int(Int) -> Self
fn LLVMBinaryType::to_int(Self) -> Int

type LLVMBool
impl Eq for LLVMBool

#external
pub type LLVMBuilderRef
fn LLVMBuilderRef::add_metadata_to_inst(Self, LLVMValueRef) -> Unit
fn LLVMBuilderRef::build_addr_space_cast(Self, LLVMValueRef, LLVMTypeRef, String) -> LLVMValueRef
fn LLVMBuilderRef::build_aggregate_ret(Self, Array[LLVMValueRef]) -> LLVMValueRef
fn LLVMBuilderRef::build_alloca(Self, LLVMTypeRef, String) -> LLVMValueRef
fn LLVMBuilderRef::build_array_alloca(Self, LLVMTypeRef, LLVMValueRef, String) -> LLVMValueRef
fn LLVMBuilderRef::build_atomic_rmw(Self, LLVMAtomicRMWBinOp, LLVMValueRef, LLVMValueRef, LLVMAtomicOrdering, LLVMBool) -> LLVMValueRef
fn LLVMBuilderRef::build_bit_cast(Self, LLVMValueRef, LLVMTypeRef, String) -> LLVMValueRef
fn LLVMBuilderRef::build_br(Self, LLVMBasicBlockRef) -> LLVMValueRef
fn LLVMBuilderRef::build_call2(Self, LLVMTypeRef, LLVMValueRef, Array[LLVMValueRef], String) -> LLVMValueRef
fn LLVMBuilderRef::build_call_br(Self, LLVMTypeRef, LLVMValueRef, LLVMBasicBlockRef, Array[LLVMBasicBlockRef], Array[LLVMValueRef], Array[LLVMOperandBundleRef], String) -> LLVMValueRef
fn LLVMBuilderRef::build_call_with_operand_bundles(Self, LLVMTypeRef, LLVMValueRef, Array[LLVMValueRef], Array[LLVMOperandBundleRef], String) -> LLVMValueRef
fn LLVMBuilderRef::build_cast(Self, LLVMOpcode, LLVMValueRef, LLVMTypeRef, String) -> LLVMValueRef
fn LLVMBuilderRef::build_catch_pad(Self, LLVMValueRef, Array[LLVMValueRef], String) -> LLVMValueRef
fn LLVMBuilderRef::build_catch_ret(Self, LLVMValueRef, LLVMBasicBlockRef) -> LLVMValueRef
fn LLVMBuilderRef::build_catch_switch(Self, LLVMValueRef, LLVMBasicBlockRef, UInt, String) -> LLVMValueRef
fn LLVMBuilderRef::build_cleanup_pad(Self, LLVMValueRef, Array[LLVMValueRef], String) -> LLVMValueRef
fn LLVMBuilderRef::build_cleanup_ret(Self, LLVMValueRef, LLVMBasicBlockRef) -> LLVMValueRef
fn LLVMBuilderRef::build_cond_br(Self, LLVMValueRef, LLVMBasicBlockRef, LLVMBasicBlockRef) -> LLVMValueRef
fn LLVMBuilderRef::build_extract_element(Self, LLVMValueRef, LLVMValueRef, String) -> LLVMValueRef
fn LLVMBuilderRef::build_extract_value(Self, LLVMValueRef, UInt, String) -> LLVMValueRef
fn LLVMBuilderRef::build_f_neg(Self, LLVMValueRef, String) -> LLVMValueRef
fn LLVMBuilderRef::build_fcmp(Self, LLVMRealPredicate, LLVMValueRef, LLVMValueRef, String) -> LLVMValueRef
fn LLVMBuilderRef::build_fp_cast(Self, LLVMValueRef, LLVMTypeRef, String) -> LLVMValueRef
fn LLVMBuilderRef::build_fp_ext(Self, LLVMValueRef, LLVMTypeRef, String) -> LLVMValueRef
fn LLVMBuilderRef::build_fp_to_si(Self, LLVMValueRef, LLVMTypeRef, String) -> LLVMValueRef
fn LLVMBuilderRef::build_fp_to_ui(Self, LLVMValueRef, LLVMTypeRef, String) -> LLVMValueRef
fn LLVMBuilderRef::build_fp_trunc(Self, LLVMValueRef, LLVMTypeRef, String) -> LLVMValueRef
fn LLVMBuilderRef::build_free(Self, LLVMValueRef) -> LLVMValueRef
fn LLVMBuilderRef::build_freeze(Self, LLVMValueRef, String) -> LLVMValueRef
fn LLVMBuilderRef::build_gep2(Self, LLVMTypeRef, LLVMValueRef, Array[LLVMValueRef], String) -> LLVMValueRef
fn LLVMBuilderRef::build_global_string(Self, String, String) -> LLVMValueRef
fn LLVMBuilderRef::build_global_string_ptr(Self, String, String) -> LLVMValueRef
fn LLVMBuilderRef::build_icmp(Self, LLVMIntPredicate, LLVMValueRef, LLVMValueRef, String) -> LLVMValueRef
fn LLVMBuilderRef::build_in_bounds_gep2(Self, LLVMTypeRef, LLVMValueRef, Array[LLVMValueRef], String) -> LLVMValueRef
fn LLVMBuilderRef::build_indirect_br(Self, LLVMValueRef, UInt) -> LLVMValueRef
fn LLVMBuilderRef::build_insert_element(Self, LLVMValueRef, LLVMValueRef, LLVMValueRef, String) -> LLVMValueRef
fn LLVMBuilderRef::build_insert_value(Self, LLVMValueRef, LLVMValueRef, UInt, String) -> LLVMValueRef
fn LLVMBuilderRef::build_int_cast(Self, LLVMValueRef, LLVMTypeRef, String) -> LLVMValueRef
fn LLVMBuilderRef::build_int_cast2(Self, LLVMValueRef, LLVMTypeRef, Bool, String) -> LLVMValueRef
fn LLVMBuilderRef::build_int_to_ptr(Self, LLVMValueRef, LLVMTypeRef, String) -> LLVMValueRef
fn LLVMBuilderRef::build_invoke2(Self, LLVMTypeRef, LLVMValueRef, Array[LLVMValueRef], LLVMBasicBlockRef, LLVMBasicBlockRef, String) -> LLVMValueRef
fn LLVMBuilderRef::build_invoke_with_operand_bundles(Self, LLVMTypeRef, LLVMValueRef, Array[LLVMValueRef], LLVMBasicBlockRef, LLVMBasicBlockRef, Array[LLVMOperandBundleRef], String) -> LLVMValueRef
fn LLVMBuilderRef::build_is_not_null(Self, LLVMValueRef, String) -> LLVMValueRef
fn LLVMBuilderRef::build_is_null(Self, LLVMValueRef, String) -> LLVMValueRef
fn LLVMBuilderRef::build_landing_pad(Self, LLVMTypeRef, LLVMValueRef, UInt, String) -> LLVMValueRef
fn LLVMBuilderRef::build_load2(Self, LLVMTypeRef, LLVMValueRef, String) -> LLVMValueRef
fn LLVMBuilderRef::build_malloc(Self, LLVMTypeRef, String) -> LLVMValueRef
fn LLVMBuilderRef::build_mem_cpy(Self, LLVMValueRef, UInt, LLVMValueRef, UInt, LLVMValueRef) -> LLVMValueRef
fn LLVMBuilderRef::build_mem_move(Self, LLVMValueRef, UInt, LLVMValueRef, UInt, LLVMValueRef) -> LLVMValueRef
fn LLVMBuilderRef::build_mem_set(Self, LLVMValueRef, LLVMValueRef, LLVMValueRef, UInt) -> LLVMValueRef
fn LLVMBuilderRef::build_neg(Self, LLVMValueRef, String) -> LLVMValueRef
fn LLVMBuilderRef::build_not(Self, LLVMValueRef, String) -> LLVMValueRef
fn LLVMBuilderRef::build_nsw_neg(Self, LLVMValueRef, String) -> LLVMValueRef
fn LLVMBuilderRef::build_nuw_neg(Self, LLVMValueRef, String) -> LLVMValueRef
fn LLVMBuilderRef::build_phi(Self, LLVMTypeRef, String) -> LLVMValueRef
fn LLVMBuilderRef::build_pointer_cast(Self, LLVMValueRef, LLVMTypeRef, String) -> LLVMValueRef
fn LLVMBuilderRef::build_ptr_diff2(Self, LLVMTypeRef, LLVMValueRef, LLVMValueRef, String) -> LLVMValueRef
fn LLVMBuilderRef::build_ptr_to_int(Self, LLVMValueRef, LLVMTypeRef, String) -> LLVMValueRef
fn LLVMBuilderRef::build_resume(Self, LLVMValueRef) -> LLVMValueRef
fn LLVMBuilderRef::build_ret(Self, LLVMValueRef) -> LLVMValueRef
fn LLVMBuilderRef::build_ret_void(Self) -> LLVMValueRef
fn LLVMBuilderRef::build_s_ext(Self, LLVMValueRef, LLVMTypeRef, String) -> LLVMValueRef
fn LLVMBuilderRef::build_s_ext_or_bit_cast(Self, LLVMValueRef, LLVMTypeRef, String) -> LLVMValueRef
fn LLVMBuilderRef::build_select(Self, LLVMValueRef, LLVMValueRef, LLVMValueRef, String) -> LLVMValueRef
fn LLVMBuilderRef::build_shuffle_vector(Self, LLVMValueRef, LLVMValueRef, LLVMValueRef, String) -> LLVMValueRef
fn LLVMBuilderRef::build_si_to_fp(Self, LLVMValueRef, LLVMTypeRef, String) -> LLVMValueRef
fn LLVMBuilderRef::build_store(Self, LLVMValueRef, LLVMValueRef) -> LLVMValueRef
fn LLVMBuilderRef::build_struct_gep2(Self, LLVMTypeRef, LLVMValueRef, UInt, String) -> LLVMValueRef
fn LLVMBuilderRef::build_switch(Self, LLVMValueRef, LLVMBasicBlockRef, UInt) -> LLVMValueRef
fn LLVMBuilderRef::build_trunc(Self, LLVMValueRef, LLVMTypeRef, String) -> LLVMValueRef
fn LLVMBuilderRef::build_trunc_or_bit_cast(Self, LLVMValueRef, LLVMTypeRef, String) -> LLVMValueRef
fn LLVMBuilderRef::build_ui_to_fp(Self, LLVMValueRef, LLVMTypeRef, String) -> LLVMValueRef
fn LLVMBuilderRef::build_unreachable(Self) -> LLVMValueRef
fn LLVMBuilderRef::build_va_arg(Self, LLVMValueRef, LLVMTypeRef, String) -> LLVMValueRef
fn LLVMBuilderRef::build_z_ext(Self, LLVMValueRef, LLVMTypeRef, String) -> LLVMValueRef
fn LLVMBuilderRef::build_z_ext_or_bit_cast(Self, LLVMValueRef, LLVMTypeRef, String) -> LLVMValueRef
fn LLVMBuilderRef::clear_insertion_position(Self) -> Unit
fn LLVMBuilderRef::create() -> Self
fn LLVMBuilderRef::dispose(Self) -> Unit
fn LLVMBuilderRef::get_current_debug_location(Self) -> LLVMValueRef
fn LLVMBuilderRef::get_current_debug_location2(Self) -> LLVMMetadataRef
fn LLVMBuilderRef::get_default_fp_math_tag(Self) -> LLVMMetadataRef
fn LLVMBuilderRef::get_insert_block(Self) -> LLVMBasicBlockRef
fn LLVMBuilderRef::insert(Self, LLVMValueRef) -> Unit
fn LLVMBuilderRef::insert_existing_basic_block_after_insert_block(Self, LLVMBasicBlockRef) -> Unit
fn LLVMBuilderRef::position(Self, LLVMBasicBlockRef, LLVMValueRef) -> Unit
fn LLVMBuilderRef::position_at_end(Self, LLVMBasicBlockRef) -> Unit
fn LLVMBuilderRef::position_before(Self, LLVMValueRef) -> Unit
fn LLVMBuilderRef::position_before_dbg_records(Self, LLVMBasicBlockRef, LLVMValueRef) -> Unit
fn LLVMBuilderRef::position_before_instr_and_dbg_records(Self, LLVMValueRef) -> Unit
fn LLVMBuilderRef::set_current_debug_location2(Self, LLVMMetadataRef) -> Unit
fn LLVMBuilderRef::set_default_fp_math_tag(Self, LLVMMetadataRef) -> Unit
fn LLVMBuilderRef::set_inst_debug_location(Self, LLVMValueRef) -> Unit

pub(all) enum LLVMCallConv {
  LLVMCCallConv
  LLVMFastCallConv
  LLVMColdCallConv
  LLVMGHCCallConv
  LLVMHiPECallConv
  LLVMAnyRegCallConv
  LLVMPreserveMostCallConv
  LLVMPreserveAllCallConv
  LLVMSwiftCallConv
  LLVMCXXFASTTLSCallConv
  LLVMX86StdcallCallConv
  LLVMX86FastcallCallConv
  LLVMARMAPCSCallConv
  LLVMARMAAPCSCallConv
  LLVMARMAAPCSVFPCallConv
  LLVMMSP430INTRCallConv
  LLVMX86ThisCallCallConv
  LLVMPTXKernelCallConv
  LLVMPTXDeviceCallConv
  LLVMSPIRFUNCCallConv
  LLVMSPIRKERNELCallConv
  LLVMIntelOCLBICallConv
  LLVMX8664SysVCallConv
  LLVMWin64CallConv
  LLVMX86VectorCallCallConv
  LLVMHHVMCallConv
  LLVMHHVMCCallConv
  LLVMX86INTRCallConv
  LLVMAVRINTRCallConv
  LLVMAVRSIGNALCallConv
  LLVMAVRBUILTINCallConv
  LLVMAMDGPUVSCallConv
  LLVMAMDGPUGSCallConv
  LLVMAMDGPUPSCallConv
  LLVMAMDGPUCSCallConv
  LLVMAMDGPUKERNELCallConv
  LLVMX86RegCallCallConv
  LLVMAMDGPUHSCallConv
  LLVMMSP430BUILTINCallConv
  LLVMAMDGPULSCallConv
  LLVMAMDGPUESCallConv
}
fn LLVMCallConv::from_int(Int) -> Self
fn LLVMCallConv::to_int(Self) -> Int

pub(all) enum LLVMCodeGenFileType {
  LLVMAssemblyFile
  LLVMObjectFile
}
fn LLVMCodeGenFileType::from_int(Int) -> Self
fn LLVMCodeGenFileType::to_int(Self) -> Int

pub(all) enum LLVMCodeGenOptLevel {
  LLVMCodeGenLevelNone
  LLVMCodeGenLevelLess
  LLVMCodeGenLevelDefault
  LLVMCodeGenLevelAggressive
}
fn LLVMCodeGenOptLevel::from_int(Int) -> Self
fn LLVMCodeGenOptLevel::to_int(Self) -> Int

pub(all) enum LLVMCodeModel {
  LLVMCodeModelDefault
  LLVMCodeModelJITDefault
  LLVMCodeModelTiny
  LLVMCodeModelSmall
  LLVMCodeModelKernel
  LLVMCodeModelMedium
  LLVMCodeModelLarge
}
fn LLVMCodeModel::from_int(Int) -> Self
fn LLVMCodeModel::to_int(Self) -> Int

#external
pub type LLVMComdatRef
fn LLVMComdatRef::is_not_null(Self) -> Bool
fn LLVMComdatRef::is_null(Self) -> Bool

pub(all) enum LLVMComdatSelectionKind {
  LLVMAnyComdatSelectionKind
  LLVMExactMatchComdatSelectionKind
  LLVMLargestComdatSelectionKind
  LLVMNoDeduplicateComdatSelectionKind
  LLVMSameSizeComdatSelectionKind
}
fn LLVMComdatSelectionKind::from_int(Int) -> Self
fn LLVMComdatSelectionKind::to_int(Self) -> Int

#external
pub type LLVMContextRef
fn LLVMContextRef::bfloat_type(Self) -> LLVMTypeRef
fn LLVMContextRef::const_string(Self, String, Bool) -> LLVMValueRef
fn LLVMContextRef::const_string2(Self, String, Bool) -> LLVMValueRef
fn LLVMContextRef::const_struct(Self, Array[LLVMValueRef], Bool) -> LLVMValueRef
fn LLVMContextRef::create_builder(Self) -> LLVMBuilderRef
fn LLVMContextRef::dispose(Self) -> Unit
fn LLVMContextRef::double_type(Self) -> LLVMTypeRef
fn LLVMContextRef::float_type(Self) -> LLVMTypeRef
fn LLVMContextRef::fp128_type(Self) -> LLVMTypeRef
fn LLVMContextRef::get_type_by_name(Self, String) -> LLVMTypeRef
fn LLVMContextRef::half_type(Self) -> LLVMTypeRef
fn LLVMContextRef::int128_type(Self) -> LLVMTypeRef
fn LLVMContextRef::int16_type(Self) -> LLVMTypeRef
fn LLVMContextRef::int1_type(Self) -> LLVMTypeRef
fn LLVMContextRef::int32_type(Self) -> LLVMTypeRef
fn LLVMContextRef::int64_type(Self) -> LLVMTypeRef
fn LLVMContextRef::int8_type(Self) -> LLVMTypeRef
fn LLVMContextRef::int_type(Self, UInt) -> LLVMTypeRef
fn LLVMContextRef::intrinsic_get_type(Self, UInt, Array[LLVMTypeRef]) -> LLVMTypeRef
fn LLVMContextRef::label_type(Self) -> LLVMTypeRef
fn LLVMContextRef::md_node_in_context(Self, Array[LLVMValueRef]) -> LLVMValueRef
fn LLVMContextRef::md_node_in_context2(Self, Array[LLVMMetadataRef]) -> LLVMMetadataRef
fn LLVMContextRef::md_string_in_context(Self, String) -> LLVMValueRef
fn LLVMContextRef::md_string_in_context2(Self, String) -> LLVMMetadataRef
fn LLVMContextRef::metadata_type(Self) -> LLVMTypeRef
fn LLVMContextRef::module_create_with_name(Self, String) -> LLVMModuleRef
fn LLVMContextRef::parse_ir(Self, LLVMMemoryBufferRef) -> (LLVMModuleRef, String, Bool)
fn LLVMContextRef::pointer_type(Self, UInt) -> LLVMTypeRef
fn LLVMContextRef::ppc_fp128_type(Self) -> LLVMTypeRef
fn LLVMContextRef::set_discard_value_names(Self, Bool) -> Unit
fn LLVMContextRef::should_discard_value_names(Self) -> Bool
fn LLVMContextRef::struct_create_named(Self, String) -> LLVMTypeRef
fn LLVMContextRef::struct_type(Self, Array[LLVMTypeRef], Bool) -> LLVMTypeRef
fn LLVMContextRef::token_type(Self) -> LLVMTypeRef
fn LLVMContextRef::void_type(Self) -> LLVMTypeRef
fn LLVMContextRef::x86_amx_type(Self) -> LLVMTypeRef
fn LLVMContextRef::x86_fp80_type(Self) -> LLVMTypeRef
fn LLVMContextRef::x86_mmx_type(Self) -> LLVMTypeRef
impl Eq for LLVMContextRef

#external
pub type LLVMDIBuilderRef

pub(all) enum LLVMDIFlags {
  LLVMDIFlagZero
  LLVMDIFlagPrivate
  LLVMDIFlagProtected
  LLVMDIFlagPublic
  LLVMDIFlagFwdDecl
  LLVMDIFlagAppleBlock
  LLVMDIFlagReservedBit4
  LLVMDIFlagVirtual
  LLVMDIFlagArtificial
  LLVMDIFlagExplicit
  LLVMDIFlagPrototyped
  LLVMDIFlagObjcClassComplete
  LLVMDIFlagObjectPointer
  LLVMDIFlagVector
  LLVMDIFlagStaticMember
  LLVMDIFlagLValueReference
  LLVMDIFlagRValueReference
  LLVMDIFlagReserved
  LLVMDIFlagSingleInheritance
  LLVMDIFlagMultipleInheritance
  LLVMDIFlagVirtualInheritance
  LLVMDIFlagIntroducedVirtual
  LLVMDIFlagBitField
  LLVMDIFlagNoReturn
  LLVMDIFlagTypePassByValue
  LLVMDIFlagTypePassByReference
  LLVMDIFlagEnumClass
  LLVMDIFlagFixedEnum
  LLVMDIFlagThunk
  LLVMDIFlagNonTrivial
  LLVMDIFlagBigEndian
  LLVMDIFlagLittleEndian
  LLVMDIFlagIndirectVirtualBase
  LLVMDIFlagAccessibility
  LLVMDIFlagPtrToMemberRep
}
fn LLVMDIFlags::from_int(Int) -> Self
fn LLVMDIFlags::to_int(Self) -> Int

pub(all) enum LLVMDLLStorageClass {
  LLVMDefaultStorageClass
  LLVMDLLImportStorageClass
  LLVMDLLExportStorageClass
}
fn LLVMDLLStorageClass::from_int(Int) -> Self
fn LLVMDLLStorageClass::to_int(Self) -> Int

pub(all) enum LLVMDWARFEmissionKind {
  LLVMDWARFEmissionNone
  LLVMDWARFEmissionFull
  LLVMDWARFEmissionLineTablesOnly
}
fn LLVMDWARFEmissionKind::from_int(Int) -> Self
fn LLVMDWARFEmissionKind::to_int(Self) -> Int

pub(all) enum LLVMDWARFSourceLanguage {
  LLVMDWARFSourceLanguageC89
  LLVMDWARFSourceLanguageC
  LLVMDWARFSourceLanguageAda83
  LLVMDWARFSourceLanguageC_plus_plus
  LLVMDWARFSourceLanguageCobol74
  LLVMDWARFSourceLanguageCobol85
  LLVMDWARFSourceLanguageFortran77
  LLVMDWARFSourceLanguageFortran90
  LLVMDWARFSourceLanguagePascal83
  LLVMDWARFSourceLanguageModula2
  LLVMDWARFSourceLanguageJava
  LLVMDWARFSourceLanguageC99
  LLVMDWARFSourceLanguageAda95
  LLVMDWARFSourceLanguageFortran95
  LLVMDWARFSourceLanguagePLI
  LLVMDWARFSourceLanguageObjC
  LLVMDWARFSourceLanguageObjC_plus_plus
  LLVMDWARFSourceLanguageUPC
  LLVMDWARFSourceLanguageD
  LLVMDWARFSourceLanguagePython
  LLVMDWARFSourceLanguageOpenCL
  LLVMDWARFSourceLanguageGo
  LLVMDWARFSourceLanguageModula3
  LLVMDWARFSourceLanguageHaskell
  LLVMDWARFSourceLanguageC_plus_plus_03
  LLVMDWARFSourceLanguageC_plus_plus_11
  LLVMDWARFSourceLanguageOCaml
  LLVMDWARFSourceLanguageRust
  LLVMDWARFSourceLanguageC11
  LLVMDWARFSourceLanguageSwift
  LLVMDWARFSourceLanguageJulia
  LLVMDWARFSourceLanguageDylan
  LLVMDWARFSourceLanguageC_plus_plus_14
  LLVMDWARFSourceLanguageFortran03
  LLVMDWARFSourceLanguageFortran08
  LLVMDWARFSourceLanguageRenderScript
  LLVMDWARFSourceLanguageBLISS
  LLVMDWARFSourceLanguageKotlin
  LLVMDWARFSourceLanguageZig
  LLVMDWARFSourceLanguageCrystal
  LLVMDWARFSourceLanguageC_plus_plus_17
  LLVMDWARFSourceLanguageC_plus_plus_20
  LLVMDWARFSourceLanguageC17
  LLVMDWARFSourceLanguageFortran18
  LLVMDWARFSourceLanguageAda2005
  LLVMDWARFSourceLanguageAda2012
  LLVMDWARFSourceLanguageHIP
  LLVMDWARFSourceLanguageAssembly
  LLVMDWARFSourceLanguageC_sharp
  LLVMDWARFSourceLanguageMojo
  LLVMDWARFSourceLanguageGLSL
  LLVMDWARFSourceLanguageGLSL_ES
  LLVMDWARFSourceLanguageHLSL
  LLVMDWARFSourceLanguageOpenCL_CPP
  LLVMDWARFSourceLanguageCPP_for_OpenCL
  LLVMDWARFSourceLanguageSYCL
  LLVMDWARFSourceLanguageRuby
  LLVMDWARFSourceLanguageMove
  LLVMDWARFSourceLanguageHylo
  LLVMDWARFSourceLanguageMetal
  LLVMDWARFSourceLanguageMips_Assembler
  LLVMDWARFSourceLanguageGOOGLE_RenderScript
  LLVMDWARFSourceLanguageBORLAND_Delphi
}
fn LLVMDWARFSourceLanguage::from_int(Int) -> Self
fn LLVMDWARFSourceLanguage::to_int(Self) -> Int

pub(all) type LLVMDWARFTypeEncoding UInt
fn LLVMDWARFTypeEncoding::inner(Self) -> UInt
fn LLVMDWARFTypeEncoding::into(Self) -> UInt
fn LLVMDWARFTypeEncoding::new(UInt) -> Self
impl Eq for LLVMDWARFTypeEncoding

#external
pub type LLVMDbgRecordRef
fn LLVMDbgRecordRef::get_next_dbg_record(Self) -> Self
fn LLVMDbgRecordRef::get_previous_dbg_record(Self) -> Self
fn LLVMDbgRecordRef::print(Self) -> String
fn LLVMDbgRecordRef::to_string(Self) -> String

#external
pub type LLVMDiagnosticInfoRef
fn LLVMDiagnosticInfoRef::get_severity(Self) -> LLVMDiagnosticSeverity

pub(all) enum LLVMDiagnosticSeverity {
  LLVMDSError
  LLVMDSWarning
  LLVMDSRemark
  LLVMDSNote
}
fn LLVMDiagnosticSeverity::from_int(Int) -> Self
fn LLVMDiagnosticSeverity::to_int(Self) -> Int

#external
pub type LLVMErrorRef

pub(all) enum LLVMFastMathFlags {
  AllowReassoc
  NoNaNs
  NoInfs
  NoSignedZeros
  AllowReciprocal
  AllowContract
  ApproxFunc
  None
  All
}

#external
pub type LLVMGenericValueRef

pub(all) enum LLVMGlobalISelAbortMode {
  LLVMGlobalISelAbortEnable
  LLVMGlobalISelAbortDisable
  LLVMGlobalISelAbortDisableWithDiag
}
fn LLVMGlobalISelAbortMode::from_int(Int) -> Self
fn LLVMGlobalISelAbortMode::to_int(Self) -> Int

pub(all) enum LLVMInlineAsmDialect {
  LLVMInlineAsmDialectATT
  LLVMInlineAsmDialectIntel
}
fn LLVMInlineAsmDialect::from_int(Int) -> Self
fn LLVMInlineAsmDialect::to_int(Self) -> Int

pub(all) enum LLVMIntPredicate {
  LLVMIntEQ
  LLVMIntNE
  LLVMIntUGT
  LLVMIntUGE
  LLVMIntULT
  LLVMIntULE
  LLVMIntSGT
  LLVMIntSGE
  LLVMIntSLT
  LLVMIntSLE
}
fn LLVMIntPredicate::from_int(Int) -> Self
fn LLVMIntPredicate::to_int(Self) -> Int

#external
pub type LLVMJITEventListenerRef

pub(all) enum LLVMJITSymbolGenericFlags {
  LLVMJITSymbolGenericFlagsNone
  LLVMJITSymbolGenericFlagsExported
  LLVMJITSymbolGenericFlagsWeak
  LLVMJITSymbolGenericFlagsCallable
  LLVMJITSymbolGenericFlagsMaterializationSideEffectsOnly
}
fn LLVMJITSymbolGenericFlags::from_int(Int) -> Self
fn LLVMJITSymbolGenericFlags::to_int(Self) -> Int

pub(all) type LLVMJITSymbolTargetFlags UInt
fn LLVMJITSymbolTargetFlags::inner(Self) -> UInt
impl Eq for LLVMJITSymbolTargetFlags
impl Show for LLVMJITSymbolTargetFlags

pub(all) enum LLVMLandingPadClauseTy {
  LLVMLandingPadCatch
  LLVMLandingPadFilter
}
fn LLVMLandingPadClauseTy::from_int(Int) -> Self
fn LLVMLandingPadClauseTy::to_int(Self) -> Int

pub(all) enum LLVMLinkage {
  LLVMExternalLinkage
  LLVMAvailableExternallyLinkage
  LLVMLinkOnceAnyLinkage
  LLVMLinkOnceODRLinkage
  LLVMLinkOnceODRAutoHideLinkage
  LLVMWeakAnyLinkage
  LLVMWeakODRLinkage
  LLVMAppendingLinkage
  LLVMInternalLinkage
  LLVMPrivateLinkage
  LLVMDLLImportLinkage
  LLVMDLLExportLinkage
  LLVMExternalWeakLinkage
  LLVMGhostLinkage
  LLVMCommonLinkage
  LLVMLinkerPrivateLinkage
  LLVMLinkerPrivateWeakLinkage
}
fn LLVMLinkage::to_int(Self) -> Int

pub(all) enum LLVMLinkerMode {
  LLVMLinkerDestroySource
  LLVMLinkerPreserveSource_Removed
}
fn LLVMLinkerMode::from_int(Int) -> Self
fn LLVMLinkerMode::to_int(Self) -> Int

pub(all) enum LLVMMDNodeKind {
  LLVMMDStringMetadataKind
  LLVMConstantAsMetadataMetadataKind
  LLVMLocalAsMetadataMetadataKind
  LLVMDistinctMDOperandPlaceholderMetadataKind
  LLVMMDTupleMetadataKind
  LLVMDILocationMetadataKind
  LLVMDIExpressionMetadataKind
  LLVMDIGlobalVariableExpressionMetadataKind
  LLVMGenericDINodeMetadataKind
  LLVMDISubrangeMetadataKind
  LLVMDIEnumeratorMetadataKind
  LLVMDIBasicTypeMetadataKind
  LLVMDIDerivedTypeMetadataKind
  LLVMDICompositeTypeMetadataKind
  LLVMDISubroutineTypeMetadataKind
  LLVMDIFileMetadataKind
  LLVMDICompileUnitMetadataKind
  LLVMDISubprogramMetadataKind
  LLVMDILexicalBlockMetadataKind
  LLVMDILexicalBlockFileMetadataKind
  LLVMDINamespaceMetadataKind
  LLVMDIModuleMetadataKind
  LLVMDITemplateTypeParameterMetadataKind
  LLVMDITemplateValueParameterMetadataKind
  LLVMDIGlobalVariableMetadataKind
  LLVMDILocalVariableMetadataKind
  LLVMDILabelMetadataKind
  LLVMDIObjCPropertyMetadataKind
  LLVMDIImportedEntityMetadataKind
  LLVMDIMacroMetadataKind
  LLVMDIMacroFileMetadataKind
  LLVMDICommonBlockMetadataKind
  LLVMDIStringTypeMetadataKind
  LLVMDIGenericSubrangeMetadataKind
  LLVMDIArgListMetadataKind
  LLVMDIAssignIDMetadataKind
}
fn LLVMMDNodeKind::from_int(Int) -> Self
fn LLVMMDNodeKind::to_int(Self) -> Int

#external
pub type LLVMMemoryBufferRef
fn LLVMMemoryBufferRef::dispose_memory_buffer(Self) -> Unit
fn LLVMMemoryBufferRef::get_buffer_size(Self) -> Int
fn LLVMMemoryBufferRef::get_buffer_start(Self) -> String

pub(all) type LLVMMetadataKind UInt
fn LLVMMetadataKind::inner(Self) -> UInt
fn LLVMMetadataKind::into(Self) -> UInt
fn LLVMMetadataKind::new(UInt) -> Self
impl Eq for LLVMMetadataKind

#external
pub type LLVMMetadataRef

pub(all) enum LLVMModuleFlagBehavior {
  LLVMModuleFlagBehaviorError
  LLVMModuleFlagBehaviorWarning
  LLVMModuleFlagBehaviorRequire
  LLVMModuleFlagBehaviorOverride
  LLVMModuleFlagBehaviorAppend
  LLVMModuleFlagBehaviorAppendUnique
}
fn LLVMModuleFlagBehavior::from_int(Int) -> Self
fn LLVMModuleFlagBehavior::to_int(Self) -> Int

#external
pub type LLVMModuleFlagEntry

#external
pub type LLVMModuleProviderRef

#external
pub type LLVMModuleRef
fn LLVMModuleRef::add_function(Self, String, LLVMTypeRef) -> LLVMValueRef
fn LLVMModuleRef::add_global_ifunc(Self, String, LLVMTypeRef, UInt, LLVMValueRef) -> LLVMValueRef
fn LLVMModuleRef::add_named_metadata_operand(Self, String, LLVMValueRef) -> Unit
fn LLVMModuleRef::clone(Self) -> Self
fn LLVMModuleRef::create_function_pass_manager(Self) -> LLVMPassManagerRef
fn LLVMModuleRef::dispose(Self) -> Unit
fn LLVMModuleRef::dump(Self) -> Unit
fn LLVMModuleRef::get_context(Self) -> LLVMContextRef
fn LLVMModuleRef::get_data_layout(Self) -> String
fn LLVMModuleRef::get_data_layout_str(Self) -> String
fn LLVMModuleRef::get_first_function(Self) -> LLVMValueRef
fn LLVMModuleRef::get_first_global_alias(Self) -> LLVMValueRef
fn LLVMModuleRef::get_first_global_ifunc(Self) -> LLVMValueRef
fn LLVMModuleRef::get_last_function(Self) -> LLVMValueRef
fn LLVMModuleRef::get_last_global_alias(Self) -> LLVMValueRef
fn LLVMModuleRef::get_last_global_ifunc(Self) -> LLVMValueRef
fn LLVMModuleRef::get_named_alias(Self, String) -> LLVMValueRef
fn LLVMModuleRef::get_named_function(Self, String) -> LLVMValueRef
fn LLVMModuleRef::get_named_global_ifunc(Self, String) -> LLVMValueRef
fn LLVMModuleRef::get_named_metadata(Self, String) -> Array[LLVMValueRef]
fn LLVMModuleRef::get_named_metadata_num_operands(Self, String) -> UInt
fn LLVMModuleRef::get_or_insert_comdat(Self, String) -> LLVMComdatRef
fn LLVMModuleRef::get_target(Self) -> String
fn LLVMModuleRef::get_type_by_name(Self, String) -> LLVMTypeRef
fn LLVMModuleRef::is_new_dbg_info_format(Self) -> Bool
fn LLVMModuleRef::print_to_string(Self) -> String
fn LLVMModuleRef::set_data_layout(Self, String) -> Unit
fn LLVMModuleRef::set_target(Self, String) -> Unit
fn LLVMModuleRef::to_string(Self) -> String

#external
pub type LLVMNamedMDNodeRef

pub(all) enum LLVMOpcode {
  LLVMRet
  LLVMBr
  LLVMSwitch
  LLVMIndirectBr
  LLVMInvoke
  LLVMUnreachable
  LLVMCallBr
  LLVMFNeg
  LLVMAdd
  LLVMFAdd
  LLVMSub
  LLVMFSub
  LLVMMul
  LLVMFMul
  LLVMUDiv
  LLVMSDiv
  LLVMFDiv
  LLVMURem
  LLVMSRem
  LLVMFRem
  LLVMShl
  LLVMLShr
  LLVMAShr
  LLVMAnd
  LLVMOr
  LLVMXor
  LLVMAlloca
  LLVMLoad
  LLVMStore
  LLVMGetElementPtr
  LLVMTrunc
  LLVMZExt
  LLVMSExt
  LLVMFPToUI
  LLVMFPToSI
  LLVMUIToFP
  LLVMSIToFP
  LLVMFPTrunc
  LLVMFPExt
  LLVMPtrToInt
  LLVMIntToPtr
  LLVMBitCast
  LLVMAddrSpaceCast
  LLVMICmp
  LLVMFCmp
  LLVMPHI
  LLVMCall
  LLVMSelect
  LLVMUserOp1
  LLVMUserOp2
  LLVMVAArg
  LLVMExtractElement
  LLVMInsertElement
  LLVMShuffleVector
  LLVMExtractValue
  LLVMInsertValue
  LLVMFreeze
  LLVMFence
  LLVMAtomicCmpXchg
  LLVMAtomicRMW
  LLVMResume
  LLVMLandingPad
  LLVMCleanupRet
  LLVMCatchRet
  LLVMCatchPad
  LLVMCleanupPad
  LLVMCatchSwitch
}
fn LLVMOpcode::from_int(Int) -> Self
fn LLVMOpcode::to_int(Self) -> Int

#external
pub type LLVMOperandBundleRef
fn LLVMOperandBundleRef::dispose(Self) -> Unit
fn LLVMOperandBundleRef::get_arg(Self, UInt) -> LLVMValueRef
fn LLVMOperandBundleRef::get_num_args(Self) -> UInt

#external
pub type LLVMOrcExecutionSessionRef

pub(all) type LLVMOrcExecutorAddress UInt64
fn LLVMOrcExecutorAddress::inner(Self) -> UInt64
impl Eq for LLVMOrcExecutorAddress
impl Show for LLVMOrcExecutorAddress

pub(all) type LLVMOrcJITTargetAddress UInt64
fn LLVMOrcJITTargetAddress::inner(Self) -> UInt64
impl Eq for LLVMOrcJITTargetAddress
impl Show for LLVMOrcJITTargetAddress

#external
pub type LLVMOrcSymbolStringPoolEntryRef

#external
pub type LLVMOrcSymbolStringPoolRef

#external
pub type LLVMPassBuilderOptionsRef

#external
pub type LLVMPassManagerBuilderRef

#external
pub type LLVMPassManagerRef
fn LLVMPassManagerRef::create() -> Self
fn LLVMPassManagerRef::dispose_pass_manager(Self) -> Unit
fn LLVMPassManagerRef::finalize_function_pass_manager(Self) -> Bool
fn LLVMPassManagerRef::initialize_function_pass_manager(Self) -> Bool
fn LLVMPassManagerRef::run(Self, LLVMModuleRef) -> Bool
fn LLVMPassManagerRef::run_function_pass_manager(Self, LLVMValueRef) -> Bool

#external
pub type LLVMPassRegistryRef

pub(all) enum LLVMRealPredicate {
  LLVMRealPredicateFalse
  LLVMRealOEQ
  LLVMRealOGT
  LLVMRealOGE
  LLVMRealOLT
  LLVMRealOLE
  LLVMRealONE
  LLVMRealORD
  LLVMRealUNO
  LLVMRealUEQ
  LLVMRealUGT
  LLVMRealUGE
  LLVMRealULT
  LLVMRealULE
  LLVMRealUNE
  LLVMRealPredicateTrue
}
fn LLVMRealPredicate::from_int(Int) -> Self
fn LLVMRealPredicate::to_int(Self) -> Int

pub(all) enum LLVMRelocMode {
  LLVMRelocDefault
  LLVMRelocStatic
  LLVMRelocPIC
  LLVMRelocDynamicNoPic
  LLVMRelocROPI
  LLVMRelocRWPI
  LLVMRelocROPI_RWPI
}
fn LLVMRelocMode::from_int(Int) -> Self
fn LLVMRelocMode::to_int(Self) -> Int

#external
pub type LLVMRemarkStringRef

pub(all) enum LLVMRemarkType {
  LLVMRemarkTypeUnknown
  LLVMRemarkTypePassed
  LLVMRemarkTypeMissed
  LLVMRemarkTypeAnalysis
  LLVMRemarkTypeAnalysisFPCommute
  LLVMRemarkTypeAnalysisAliasing
  LLVMRemarkTypeFailure
}
fn LLVMRemarkType::from_int(Int) -> Self
fn LLVMRemarkType::to_int(Self) -> Int

pub(all) enum LLVMTailCallKind {
  LLVMTailCallKindNone
  LLVMTailCallKindTail
  LLVMTailCallKindMustTail
  LLVMTailCallKindNoTail
}
fn LLVMTailCallKind::from_int(Int) -> Self
fn LLVMTailCallKind::to_int(Self) -> Int
impl Eq for LLVMTailCallKind

#external
pub type LLVMTargetMachineOptionsRef

#external
pub type LLVMTargetMachineRef

#external
pub type LLVMTargetRef

pub(all) enum LLVMThreadLocalMode {
  LLVMNotThreadLocal
  LLVMGeneralDynamicTLSModel
  LLVMLocalDynamicTLSModel
  LLVMInitialExecTLSModel
  LLVMLocalExecTLSModel
}
fn LLVMThreadLocalMode::from_int(Int) -> Self
fn LLVMThreadLocalMode::to_int(Self) -> Int

pub(all) enum LLVMTypeKind {
  LLVMVoidTypeKind
  LLVMHalfTypeKind
  LLVMFloatTypeKind
  LLVMDoubleTypeKind
  LLVMX86_FP80TypeKind
  LLVMFP128TypeKind
  LLVMPPC_FP128TypeKind
  LLVMLabelTypeKind
  LLVMIntegerTypeKind
  LLVMFunctionTypeKind
  LLVMStructTypeKind
  LLVMArrayTypeKind
  LLVMPointerTypeKind
  LLVMVectorTypeKind
  LLVMMetadataTypeKind
  LLVMX86_MMXTypeKind
  LLVMTokenTypeKind
  LLVMScalableVectorTypeKind
  LLVMBFloatTypeKind
  LLVMX86_AMXTypeKind
  LLVMTargetExtTypeKind
}
fn LLVMTypeKind::from_int(Int) -> Self
fn LLVMTypeKind::to_int(Self) -> Int
impl Eq for LLVMTypeKind
impl Show for LLVMTypeKind

#external
pub type LLVMTypeRef
fn LLVMTypeRef::align_of(Self) -> LLVMValueRef
fn LLVMTypeRef::array_type(Self, UInt) -> Self
fn LLVMTypeRef::array_type2(Self, UInt64) -> Self
fn LLVMTypeRef::bfloat_type() -> Self
fn LLVMTypeRef::const_all_ones(Self) -> LLVMValueRef
fn LLVMTypeRef::const_gep2(Self, LLVMValueRef, Array[LLVMValueRef]) -> LLVMValueRef
fn LLVMTypeRef::const_in_bounds_gep2(Self, LLVMValueRef, Array[LLVMValueRef]) -> LLVMValueRef
fn LLVMTypeRef::const_inline_asm(Self, String, String, Bool, Bool) -> LLVMValueRef
fn LLVMTypeRef::const_int(Self, UInt64, Bool) -> LLVMValueRef
fn LLVMTypeRef::const_int_of_string(Self, String, Int) -> LLVMValueRef
fn LLVMTypeRef::const_null(Self) -> LLVMValueRef
fn LLVMTypeRef::const_pointer_null(Self) -> LLVMValueRef
fn LLVMTypeRef::const_real(Self, Double) -> LLVMValueRef
fn LLVMTypeRef::const_real_of_string(Self, String) -> LLVMValueRef
fn LLVMTypeRef::count_param_types(Self) -> UInt
fn LLVMTypeRef::count_struct_element_types(Self) -> UInt
fn LLVMTypeRef::double_type() -> Self
fn LLVMTypeRef::dump(Self) -> Unit
fn LLVMTypeRef::float_type() -> Self
fn LLVMTypeRef::fp128_type() -> Self
fn LLVMTypeRef::function_type(Self, Array[Self], Bool) -> Self
fn LLVMTypeRef::get_array_length(Self) -> UInt
fn LLVMTypeRef::get_array_length2(Self) -> UInt64
fn LLVMTypeRef::get_context(Self) -> LLVMContextRef
fn LLVMTypeRef::get_element_type(Self) -> Self
fn LLVMTypeRef::get_int_type_width(Self) -> UInt
fn LLVMTypeRef::get_num_contained_types(Self) -> UInt
fn LLVMTypeRef::get_pointer_address_space(Self) -> UInt
fn LLVMTypeRef::get_poison(Self) -> LLVMValueRef
fn LLVMTypeRef::get_return_type(Self) -> Self
fn LLVMTypeRef::get_struct_element_types(Self) -> Array[Self]
fn LLVMTypeRef::get_struct_name(Self) -> String
fn LLVMTypeRef::get_subtypes(Self) -> Array[Self]
fn LLVMTypeRef::get_target_ext_type_int_param(Self, UInt) -> UInt
fn LLVMTypeRef::get_target_ext_type_name(Self) -> String
fn LLVMTypeRef::get_target_ext_type_num_int_params(Self) -> UInt
fn LLVMTypeRef::get_target_ext_type_num_type_params(Self) -> UInt
fn LLVMTypeRef::get_target_ext_type_type_param(Self, UInt) -> Self
fn LLVMTypeRef::get_type_at_index(Self, UInt) -> Self
fn LLVMTypeRef::get_undef(Self) -> LLVMValueRef
fn LLVMTypeRef::get_vector_size(Self) -> UInt
fn LLVMTypeRef::half_type() -> Self
fn LLVMTypeRef::int128_type() -> Self
fn LLVMTypeRef::int16_type() -> Self
fn LLVMTypeRef::int1_type() -> Self
fn LLVMTypeRef::int32_type() -> Self
fn LLVMTypeRef::int64_type() -> Self
fn LLVMTypeRef::int8_type() -> Self
fn LLVMTypeRef::int_type(UInt) -> Self
fn LLVMTypeRef::is_function_var_arg(Self) -> Bool
fn LLVMTypeRef::is_literal_struct(Self) -> Bool
fn LLVMTypeRef::is_not_null(Self) -> Bool
fn LLVMTypeRef::is_null(Self) -> Bool
fn LLVMTypeRef::is_opaque_pointer(Self) -> Bool
fn LLVMTypeRef::is_opaque_struct(Self) -> Bool
fn LLVMTypeRef::is_packed(Self) -> Bool
fn LLVMTypeRef::is_sized(Self) -> Bool
fn LLVMTypeRef::label_type() -> Self
fn LLVMTypeRef::pointer_type(Self, UInt) -> Self
fn LLVMTypeRef::ppc_fp128_type() -> Self
fn LLVMTypeRef::print_to_string(Self) -> String
fn LLVMTypeRef::scalable_vector_type(Self, UInt) -> Self
fn LLVMTypeRef::set_body(Self, Array[Self], Bool) -> Unit
fn LLVMTypeRef::size_of(Self) -> LLVMValueRef
fn LLVMTypeRef::struct_type(Array[Self], Bool) -> Self
fn LLVMTypeRef::to_string(Self) -> String
fn LLVMTypeRef::vector_type(Self, UInt) -> Self
fn LLVMTypeRef::void_type() -> Self
fn LLVMTypeRef::x86_amx_type() -> Self
fn LLVMTypeRef::x86_fp80_type() -> Self
fn LLVMTypeRef::x86_mmx_type() -> Self
impl Eq for LLVMTypeRef
impl Show for LLVMTypeRef

pub(all) enum LLVMUnnamedAddr {
  LLVMNoUnnamedAddr
  LLVMLocalUnnamedAddr
  LLVMGlobalUnnamedAddr
}
fn LLVMUnnamedAddr::from_int(Int) -> Self
fn LLVMUnnamedAddr::to_int(Self) -> Int
impl Eq for LLVMUnnamedAddr
impl Show for LLVMUnnamedAddr

#external
pub type LLVMUseRef
fn LLVMUseRef::get_next_use(Self) -> Self
fn LLVMUseRef::get_used_value(Self) -> LLVMValueRef
fn LLVMUseRef::get_user(Self) -> LLVMValueRef
fn LLVMUseRef::is_not_null(Self) -> Bool
fn LLVMUseRef::is_null(Self) -> Bool

pub(all) enum LLVMValueKind {
  LLVMArgumentValueKind
  LLVMBasicBlockValueKind
  LLVMMemoryUseValueKind
  LLVMMemoryDefValueKind
  LLVMMemoryPhiValueKind
  LLVMFunctionValueKind
  LLVMGlobalAliasValueKind
  LLVMGlobalIFuncValueKind
  LLVMGlobalVariableValueKind
  LLVMBlockAddressValueKind
  LLVMConstantExprValueKind
  LLVMConstantArrayValueKind
  LLVMConstantStructValueKind
  LLVMConstantVectorValueKind
  LLVMUndefValueValueKind
  LLVMConstantAggregateZeroValueKind
  LLVMConstantDataArrayValueKind
  LLVMConstantDataVectorValueKind
  LLVMConstantIntValueKind
  LLVMConstantFPValueKind
  LLVMConstantPointerNullValueKind
  LLVMConstantTokenNoneValueKind
  LLVMMetadataAsValueValueKind
  LLVMInlineAsmValueKind
  LLVMInstructionValueKind
  LLVMPoisonValueValueKind
  LLVMConstantTargetNoneValueKind
}
fn LLVMValueKind::from_int(Int) -> Self
fn LLVMValueKind::to_int(Self) -> Int

#external
pub type LLVMValueMetadataEntry

#external
pub type LLVMValueRef
fn LLVMValueRef::add_case(Self, Self, LLVMBasicBlockRef) -> Unit
fn LLVMValueRef::add_clause(Self, Self) -> Unit
fn LLVMValueRef::add_destination(Self, LLVMBasicBlockRef) -> Unit
fn LLVMValueRef::append_existing_basic_block(Self, LLVMBasicBlockRef) -> Unit
fn LLVMValueRef::as_basic_block(Self) -> LLVMBasicBlockRef
fn LLVMValueRef::as_metadata(Self) -> LLVMMetadataRef
fn LLVMValueRef::block_address(Self, LLVMBasicBlockRef) -> Self
fn LLVMValueRef::can_use_fast_math_flags(Self) -> Bool
fn LLVMValueRef::const_add(Self, Self) -> Self
fn LLVMValueRef::const_addr_space_cast(Self, LLVMTypeRef) -> Self
fn LLVMValueRef::const_array(LLVMTypeRef, Array[Self]) -> Self
fn LLVMValueRef::const_array2(LLVMTypeRef, Array[Self]) -> Self
fn LLVMValueRef::const_bit_cast(Self, LLVMTypeRef) -> Self
fn LLVMValueRef::const_extract_element(Self, Self) -> Self
fn LLVMValueRef::const_insert_element(Self, Self, Self) -> Self
fn LLVMValueRef::const_int_get_s_ext_value(Self) -> Int64
fn LLVMValueRef::const_int_get_z_ext_value(Self) -> UInt64
fn LLVMValueRef::const_int_to_ptr(Self, LLVMTypeRef) -> Self
fn LLVMValueRef::const_mul(Self, Self) -> Self
fn LLVMValueRef::const_named_struct(LLVMTypeRef, Array[Self]) -> Self
fn LLVMValueRef::const_neg(Self) -> Self
fn LLVMValueRef::const_not(Self) -> Self
fn LLVMValueRef::const_nsw_add(Self, Self) -> Self
fn LLVMValueRef::const_nsw_mul(Self, Self) -> Self
fn LLVMValueRef::const_nsw_neg(Self) -> Self
fn LLVMValueRef::const_nsw_sub(Self, Self) -> Self
fn LLVMValueRef::const_nuw_add(Self, Self) -> Self
fn LLVMValueRef::const_nuw_mul(Self, Self) -> Self
fn LLVMValueRef::const_nuw_sub(Self, Self) -> Self
fn LLVMValueRef::const_pointer_cast(Self, LLVMTypeRef) -> Self
fn LLVMValueRef::const_ptr_to_int(Self, LLVMTypeRef) -> Self
fn LLVMValueRef::const_shuffle_vector(Self, Self, Self) -> Self
fn LLVMValueRef::const_struct(Array[Self], Bool) -> Self
fn LLVMValueRef::const_sub(Self, Self) -> Self
fn LLVMValueRef::const_trunc(Self, LLVMTypeRef) -> Self
fn LLVMValueRef::const_trunc_or_bit_cast(Self, LLVMTypeRef) -> Self
fn LLVMValueRef::const_vector(Array[Self]) -> Self
fn LLVMValueRef::const_xor(Self, Self) -> Self
fn LLVMValueRef::count_basic_blocks(Self) -> UInt
fn LLVMValueRef::count_incoming(Self) -> UInt
fn LLVMValueRef::delete_instruction(Self) -> Unit
fn LLVMValueRef::dump(Self) -> Unit
fn LLVMValueRef::erase_global_ifunc(Self) -> Unit
fn LLVMValueRef::get_aggregate_element(Self, UInt) -> Self
fn LLVMValueRef::get_alignment(Self) -> UInt
fn LLVMValueRef::get_allocated_type(Self) -> LLVMTypeRef
fn LLVMValueRef::get_atomic_rmw_bin_op(Self) -> LLVMAtomicRMWBinOp
fn LLVMValueRef::get_basic_blocks(Self) -> Array[LLVMBasicBlockRef]
fn LLVMValueRef::get_block_address_basic_block(Self) -> LLVMBasicBlockRef
fn LLVMValueRef::get_block_address_function(Self) -> Self
fn LLVMValueRef::get_call_br_default_dest(Self) -> LLVMBasicBlockRef
fn LLVMValueRef::get_call_br_indirect_dest(Self, UInt) -> LLVMBasicBlockRef
fn LLVMValueRef::get_call_br_num_indirect_dests(Self) -> UInt
fn LLVMValueRef::get_called_function_type(Self) -> LLVMTypeRef
fn LLVMValueRef::get_called_value(Self) -> Self
fn LLVMValueRef::get_cast_opcode(Self, Bool, LLVMTypeRef, Bool) -> LLVMOpcode
fn LLVMValueRef::get_clause(Self, UInt) -> Self
fn LLVMValueRef::get_condition(Self) -> Self
fn LLVMValueRef::get_debug_loc_column(Self) -> UInt
fn LLVMValueRef::get_debug_loc_filename(Self) -> String
fn LLVMValueRef::get_debug_loc_line(Self) -> UInt
fn LLVMValueRef::get_dll_storage_class(Self) -> LLVMDLLStorageClass
fn LLVMValueRef::get_entry_basic_block(Self) -> LLVMBasicBlockRef
fn LLVMValueRef::get_exact(Self) -> Bool
fn LLVMValueRef::get_fast_math_flags(Self) -> LLVMFastMathFlags
fn LLVMValueRef::get_first_basic_block(Self) -> LLVMBasicBlockRef
fn LLVMValueRef::get_first_dbg_record(Self) -> LLVMDbgRecordRef
fn LLVMValueRef::get_first_param(Self) -> Self
fn LLVMValueRef::get_first_use(Self) -> LLVMUseRef
fn LLVMValueRef::get_gep_source_element_type(Self) -> LLVMTypeRef
fn LLVMValueRef::get_global_ifunc_resolver(Self) -> Self
fn LLVMValueRef::get_global_parent(Self) -> LLVMModuleRef
fn LLVMValueRef::get_icmp_predicate(Self) -> LLVMIntPredicate
fn LLVMValueRef::get_incoming_block(Self, UInt) -> LLVMBasicBlockRef
fn LLVMValueRef::get_incoming_value(Self, UInt) -> Self
fn LLVMValueRef::get_indices(Self) -> Array[UInt]
fn LLVMValueRef::get_inline_asm_can_unwind(Self) -> Bool
fn LLVMValueRef::get_inline_asm_dialect(Self) -> LLVMInlineAsmDialect
fn LLVMValueRef::get_inline_asm_function_type(Self) -> LLVMTypeRef
fn LLVMValueRef::get_inline_asm_has_side_effects(Self) -> Bool
fn LLVMValueRef::get_inline_asm_needs_aligned_stack(Self) -> Bool
fn LLVMValueRef::get_instruction_call_conv(Self) -> UInt
fn LLVMValueRef::get_instruction_parent(Self) -> LLVMBasicBlockRef
fn LLVMValueRef::get_is_disjoint(Self) -> Bool
fn LLVMValueRef::get_last_basic_block(Self) -> LLVMBasicBlockRef
fn LLVMValueRef::get_last_dbg_record(Self) -> LLVMDbgRecordRef
fn LLVMValueRef::get_last_param(Self) -> Self
fn LLVMValueRef::get_linkage(Self) -> LLVMLinkage
fn LLVMValueRef::get_mask_value(Self, UInt) -> Int
fn LLVMValueRef::get_md_node_num_operands(Self) -> UInt
fn LLVMValueRef::get_md_node_operands(Self) -> Array[Self]
fn LLVMValueRef::get_md_string(Self) -> String
fn LLVMValueRef::get_metadata(Self, UInt) -> Self
fn LLVMValueRef::get_n_neg(Self) -> Bool
fn LLVMValueRef::get_name(Self) -> String
fn LLVMValueRef::get_next_function(Self) -> Self
fn LLVMValueRef::get_next_global_alias(Self) -> Self
fn LLVMValueRef::get_next_global_ifunc(Self) -> Self
fn LLVMValueRef::get_next_instruction(Self) -> Self
fn LLVMValueRef::get_next_param(Self) -> Self
fn LLVMValueRef::get_normal_dest(Self) -> LLVMBasicBlockRef
fn LLVMValueRef::get_nsw(Self) -> Bool
fn LLVMValueRef::get_num_arg_operands(Self) -> UInt
fn LLVMValueRef::get_num_clauses(Self) -> UInt
fn LLVMValueRef::get_num_indices(Self) -> UInt
fn LLVMValueRef::get_num_mask_elements(Self) -> UInt
fn LLVMValueRef::get_num_operand_bundles(Self) -> UInt
fn LLVMValueRef::get_num_operands(Self) -> Int
fn LLVMValueRef::get_num_successors(Self) -> UInt
fn LLVMValueRef::get_nuw(Self) -> Bool
fn LLVMValueRef::get_operand(Self, UInt) -> Self
fn LLVMValueRef::get_operand_bundle_at_index(Self, UInt) -> LLVMOperandBundleRef
fn LLVMValueRef::get_operand_use(Self, UInt) -> LLVMUseRef
fn LLVMValueRef::get_param(Self, UInt) -> Self
fn LLVMValueRef::get_param_parent(Self) -> Self
fn LLVMValueRef::get_params(Self) -> Array[Self]
fn LLVMValueRef::get_previous_function(Self) -> Self
fn LLVMValueRef::get_previous_global_ifunc(Self) -> Self
fn LLVMValueRef::get_previous_instruction(Self) -> Self
fn LLVMValueRef::get_previous_param(Self) -> Self
fn LLVMValueRef::get_section(Self) -> String
fn LLVMValueRef::get_successor(Self, UInt) -> LLVMBasicBlockRef
fn LLVMValueRef::get_switch_default_dest(Self) -> LLVMBasicBlockRef
fn LLVMValueRef::get_tail_call_kind(Self) -> LLVMTailCallKind
fn LLVMValueRef::get_type(Self) -> LLVMTypeRef
fn LLVMValueRef::get_unnamed_address(Self) -> LLVMUnnamedAddr
fn LLVMValueRef::get_unwind_dest(Self) -> LLVMBasicBlockRef
fn LLVMValueRef::get_value_kind(Self) -> LLVMValueKind
fn LLVMValueRef::get_visibility(Self) -> LLVMVisibility
fn LLVMValueRef::get_volatile(Self) -> Bool
fn LLVMValueRef::get_weak(Self) -> Bool
fn LLVMValueRef::global_clear_metadata(Self) -> Unit
fn LLVMValueRef::global_erase_metadata(Self, UInt) -> Unit
fn LLVMValueRef::global_get_value_type(Self) -> LLVMTypeRef
fn LLVMValueRef::global_set_metadata(Self, UInt, LLVMMetadataRef) -> Unit
fn LLVMValueRef::has_metadata(Self) -> Bool
fn LLVMValueRef::has_unnamed_addr(Self) -> Bool
fn LLVMValueRef::instruction_clone(Self) -> Self
fn LLVMValueRef::instruction_erase_from_parent(Self) -> Unit
fn LLVMValueRef::instruction_remove_from_parent(Self) -> Unit
fn LLVMValueRef::is_atomic_single_thread(Self) -> Bool
fn LLVMValueRef::is_basic_block(Self) -> Bool
fn LLVMValueRef::is_conditional(Self) -> Bool
fn LLVMValueRef::is_constant(Self) -> Bool
fn LLVMValueRef::is_constant_string(Self) -> Bool
fn LLVMValueRef::is_declaration(Self) -> Bool
fn LLVMValueRef::is_not_null(Self) -> Bool
fn LLVMValueRef::is_null(Self) -> Bool
fn LLVMValueRef::is_poison(Self) -> Bool
fn LLVMValueRef::is_tail_call(Self) -> Bool
fn LLVMValueRef::is_undef(Self) -> Bool
fn LLVMValueRef::isa_addr_space_cast_inst(Self) -> Self
fn LLVMValueRef::isa_alloca_inst(Self) -> Self
fn LLVMValueRef::isa_argument(Self) -> Self
fn LLVMValueRef::isa_atomic_cmp_xchg_inst(Self) -> Self
fn LLVMValueRef::isa_atomic_rmw_inst(Self) -> Self
fn LLVMValueRef::isa_basic_block(Self) -> Self
fn LLVMValueRef::isa_binary_operator(Self) -> Self
fn LLVMValueRef::isa_bit_cast_inst(Self) -> Self
fn LLVMValueRef::isa_block_address(Self) -> Self
fn LLVMValueRef::isa_branch_inst(Self) -> Self
fn LLVMValueRef::isa_call_br_inst(Self) -> Self
fn LLVMValueRef::isa_call_inst(Self) -> Self
fn LLVMValueRef::isa_cast_inst(Self) -> Self
fn LLVMValueRef::isa_catch_pad_inst(Self) -> Self
fn LLVMValueRef::isa_catch_return_inst(Self) -> Self
fn LLVMValueRef::isa_catch_switch_inst(Self) -> Self
fn LLVMValueRef::isa_cleanup_pad_inst(Self) -> Self
fn LLVMValueRef::isa_cleanup_return_inst(Self) -> Self
fn LLVMValueRef::isa_cmp_inst(Self) -> Self
fn LLVMValueRef::isa_constant(Self) -> Self
fn LLVMValueRef::isa_constant_aggregate_zero(Self) -> Self
fn LLVMValueRef::isa_constant_array(Self) -> Self
fn LLVMValueRef::isa_constant_data_array(Self) -> Self
fn LLVMValueRef::isa_constant_data_sequential(Self) -> Self
fn LLVMValueRef::isa_constant_data_vector(Self) -> Self
fn LLVMValueRef::isa_constant_expr(Self) -> Self
fn LLVMValueRef::isa_constant_fp(Self) -> Self
fn LLVMValueRef::isa_constant_int(Self) -> Self
fn LLVMValueRef::isa_constant_pointer_null(Self) -> Self
fn LLVMValueRef::isa_constant_struct(Self) -> Self
fn LLVMValueRef::isa_constant_token_none(Self) -> Self
fn LLVMValueRef::isa_constant_vector(Self) -> Self
fn LLVMValueRef::isa_dbg_declare_inst(Self) -> Self
fn LLVMValueRef::isa_dbg_info_intrinsic(Self) -> Self
fn LLVMValueRef::isa_dbg_label_inst(Self) -> Self
fn LLVMValueRef::isa_dbg_variable_intrinsic(Self) -> Self
fn LLVMValueRef::isa_extract_element_inst(Self) -> Self
fn LLVMValueRef::isa_extract_value_inst(Self) -> Self
fn LLVMValueRef::isa_f_cmp_inst(Self) -> Self
fn LLVMValueRef::isa_fence_inst(Self) -> Self
fn LLVMValueRef::isa_fp_ext_inst(Self) -> Self
fn LLVMValueRef::isa_fp_to_si_inst(Self) -> Self
fn LLVMValueRef::isa_fp_to_ui_inst(Self) -> Self
fn LLVMValueRef::isa_fp_trunc_inst(Self) -> Self
fn LLVMValueRef::isa_freeze_inst(Self) -> Self
fn LLVMValueRef::isa_funclet_pad_inst(Self) -> Self
fn LLVMValueRef::isa_function(Self) -> Self
fn LLVMValueRef::isa_get_element_ptr_inst(Self) -> Self
fn LLVMValueRef::isa_global_alias(Self) -> Self
fn LLVMValueRef::isa_global_ifunc(Self) -> Self
fn LLVMValueRef::isa_global_object(Self) -> Self
fn LLVMValueRef::isa_global_value(Self) -> Self
fn LLVMValueRef::isa_global_variable(Self) -> Self
fn LLVMValueRef::isa_i_cmp_inst(Self) -> Self
fn LLVMValueRef::isa_indirect_br_inst(Self) -> Self
fn LLVMValueRef::isa_inline_asm(Self) -> Self
fn LLVMValueRef::isa_insert_element_inst(Self) -> Self
fn LLVMValueRef::isa_insert_value_inst(Self) -> Self
fn LLVMValueRef::isa_instruction(Self) -> Self
fn LLVMValueRef::isa_int_to_ptr_inst(Self) -> Self
fn LLVMValueRef::isa_intrinsic_inst(Self) -> Self
fn LLVMValueRef::isa_invoke_inst(Self) -> Self
fn LLVMValueRef::isa_landing_pad_inst(Self) -> Self
fn LLVMValueRef::isa_load_inst(Self) -> Self
fn LLVMValueRef::isa_md_node(Self) -> Self
fn LLVMValueRef::isa_md_string(Self) -> Self
fn LLVMValueRef::isa_mem_cpy_inst(Self) -> Self
fn LLVMValueRef::isa_mem_intrinsic(Self) -> Self
fn LLVMValueRef::isa_mem_move_inst(Self) -> Self
fn LLVMValueRef::isa_mem_set_inst(Self) -> Self
fn LLVMValueRef::isa_phi_node(Self) -> Self
fn LLVMValueRef::isa_poison_value(Self) -> Self
fn LLVMValueRef::isa_ptr_to_int_inst(Self) -> Self
fn LLVMValueRef::isa_resume_inst(Self) -> Self
fn LLVMValueRef::isa_return_inst(Self) -> Self
fn LLVMValueRef::isa_select_inst(Self) -> Self
fn LLVMValueRef::isa_sext_inst(Self) -> Self
fn LLVMValueRef::isa_shuffle_vector_inst(Self) -> Self
fn LLVMValueRef::isa_si_to_fp_inst(Self) -> Self
fn LLVMValueRef::isa_store_inst(Self) -> Self
fn LLVMValueRef::isa_switch_inst(Self) -> Self
fn LLVMValueRef::isa_terminator_inst(Self) -> Self
fn LLVMValueRef::isa_trunc_inst(Self) -> Self
fn LLVMValueRef::isa_ui_to_fp_inst(Self) -> Self
fn LLVMValueRef::isa_unary_instruction(Self) -> Self
fn LLVMValueRef::isa_unary_operator(Self) -> Self
fn LLVMValueRef::isa_undef_value(Self) -> Self
fn LLVMValueRef::isa_unreachable_inst(Self) -> Self
fn LLVMValueRef::isa_user(Self) -> Self
fn LLVMValueRef::isa_va_arg_inst(Self) -> Self
fn LLVMValueRef::isa_value_as_metadata(Self) -> Self
fn LLVMValueRef::isa_z_ext_inst(Self) -> Self
fn LLVMValueRef::md_string(String) -> Self
fn LLVMValueRef::print(Self) -> String
fn LLVMValueRef::remove_global_ifunc(Self) -> Unit
fn LLVMValueRef::replace_all_uses_with(Self, Self) -> Unit
fn LLVMValueRef::replace_md_node_operand_with(Self, UInt, LLVMMetadataRef) -> Unit
fn LLVMValueRef::set_alignment(Self, UInt) -> Unit
fn LLVMValueRef::set_atomic_rmw_bin_op(Self, LLVMAtomicRMWBinOp) -> Unit
fn LLVMValueRef::set_atomic_single_thread(Self, Bool) -> Unit
fn LLVMValueRef::set_condition(Self, Self) -> Unit
fn LLVMValueRef::set_exact(Self, Bool) -> Unit
fn LLVMValueRef::set_fast_math_flags(Self, LLVMFastMathFlags) -> Unit
fn LLVMValueRef::set_global_ifunc_resolver(Self, Self) -> Unit
fn LLVMValueRef::set_instr_param_alignment(Self, LLVMAttributeIndex, UInt) -> Unit
fn LLVMValueRef::set_instruction_call_conv(Self, UInt) -> Unit
fn LLVMValueRef::set_is_disjoint(Self, Bool) -> Unit
fn LLVMValueRef::set_is_in_bounds(Self, Bool) -> Unit
fn LLVMValueRef::set_linkage(Self, LLVMLinkage) -> Unit
fn LLVMValueRef::set_metadata(Self, UInt, Self) -> Unit
fn LLVMValueRef::set_n_neg(Self, Bool) -> Unit
fn LLVMValueRef::set_name(Self, String) -> Unit
fn LLVMValueRef::set_normal_dest(Self, LLVMBasicBlockRef) -> Unit
fn LLVMValueRef::set_nsw(Self, Bool) -> Unit
fn LLVMValueRef::set_nuw(Self, Bool) -> Unit
fn LLVMValueRef::set_operand(Self, UInt, Self) -> Unit
fn LLVMValueRef::set_ordering(Self, LLVMAtomicOrdering) -> Unit
fn LLVMValueRef::set_param_alignment(Self, UInt) -> Unit
fn LLVMValueRef::set_section(Self, String) -> Unit
fn LLVMValueRef::set_successor(Self, UInt, LLVMBasicBlockRef) -> Unit
fn LLVMValueRef::set_tail_call(Self, Bool) -> Unit
fn LLVMValueRef::set_tail_call_kind(Self, LLVMTailCallKind) -> Unit
fn LLVMValueRef::set_unnamed_addr(Self, Bool) -> Unit
fn LLVMValueRef::set_unnamed_address(Self, LLVMUnnamedAddr) -> Unit
fn LLVMValueRef::set_unwind_dest(Self, LLVMBasicBlockRef) -> Unit
fn LLVMValueRef::set_visibility(Self, LLVMVisibility) -> Unit
fn LLVMValueRef::set_volatile(Self, Bool) -> Unit
fn LLVMValueRef::set_weak(Self, Bool) -> Unit
fn LLVMValueRef::to_string(Self) -> String
impl Eq for LLVMValueRef
impl Show for LLVMValueRef

pub(all) enum LLVMVerifierFailureAction {
  LLVMAbortProcessAction
  LLVMPrintMessageAction
  LLVMReturnStatusAction
}
fn LLVMVerifierFailureAction::from_int(Int) -> Self
fn LLVMVerifierFailureAction::to_int(Self) -> Int

pub(all) enum LLVMVisibility {
  LLVMDefaultVisibility
  LLVMHiddenVisibility
  LLVMProtectedVisibility
}
fn LLVMVisibility::from_int(Int) -> Self
fn LLVMVisibility::to_int(Self) -> Int

#external
pub type LVMExecutionEngineRef

#external
pub type LVMMCJITMemoryManagerRef

// Type aliases

// Traits

